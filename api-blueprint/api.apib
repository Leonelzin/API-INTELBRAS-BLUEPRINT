FORMAT: 1A
HOST: https://apiintelbrasv4.docs.apiary.io

# Intelbras REST API V4

Welcome to **Intelbras** API. This API provides a way to interact with or configure
networking products such as wireless devices (routers/APs). We are working hard
to make it available to as many products as possible.

It is important to note that even if the device supports **API v4** specification,
does not mean that it will support all endpoints or all configuration options.
Each particular product might have it's own restrictions/features.

## Root URI/Endpoint
Throughout this document, we will refer to an **endpoint/resource/URI** using only
the last portion of it, leaving the **root prefix** out. The **root prefix** of
any endpoint will be: **{http/https}:[device_address]/api/v4** or
**{http/https}:[device_address]/cgi-bin/api/v4**. E.g. http://10.0.0.1/api/v4.

## Endpoint Groups
All REST resources are located within 4 main groups:
- **System**: System related configuration/information/actions such as users,
sessions, firmware upgrade...
- **Interfaces**: Interface (ethernet, wifi, pon...) related
configuration/information/actions.
- **Services**: Service (DHCP server, QoS, firewall, snmp...) related
configuration/information/actions.
- **Network**: Network related configuration/information/actions such as VLAN,
static routes, LAN, WAN...

## HTTP Verbs
This API uses the following HTTP verbs (methods):
- **GET**: Read/Retrieve resource's information.
- **POST**: Create a new resource.
- **PUT**: Update/Replace resource's information.
- **DELETE**: Delete/Remove a resource.

        Note: Objects, containing a field called "default", marked as true, cannot be deleted when a delete method is called.

## Payload
This API uses [JSON](http://www.json.org/) notation to manipulate data. Some
devices may support compression.

## Glossary
These are the terms/fields that are commonly used throughout this document:
- **resource/endpoint/URI**: Refers to the HTTP URL that accepts some operation
(GET/PUT/POST/DELETE).
- **id**: Primary/unique key to identify any particular resource.
- **auto_apply**: Special field indicating that the device should apply any pending
configuration automatically. The default behavior depends on the global **auto_apply**
field located at [**system/device**](#system_device).
<a name="air_time_fairness"></a>
- **atf/atf_***: **Air Time Fairness**. This is a WiFi feature to boost overall network
performance.
<a name="wifi_son"></a>
- **son**: **Self Organized Network**. This is a WiFi set of features, also known as
**MESH**.
- **dns4/dns6**: IPv4 DNS address/IPv6 DNS address
- **ip4/ip6/ip**: IPv4 address/IPv6 address/Both IPv4 and IPv6 address.
- **gw4/gw6/gw**: IPv4 gateway address/IPv6 gateway address/Both IPv4 and IPv6 gateway
address.
- **cidr4/cidr6/cidr**: IPv4/IPv6/Both IPv4 and IPv6 address using CIDR notation
(IP/prefix bits).
- **mask**: Network mask (used for IPv4 address).
- **ip_mode**: IP addressing mode (automatic,static....)
- **interface**: Network interface name (eth0,eth1...).
- **domain**: Domain address (www.intelbras.com.br)
- **host**: IP or domain address.
- **description**: Generic description of a resource.
- **port**: TCP/UDP service port.
- **protocol**: Network protocol number according to
[IANA](https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
- **mode**: Used to refer as operational mode or service mode.
- **index**: Special field used when we need sorting.
- **timestamp**: Unix time.
- **max_entries**: Maximum number of entries for any particular resource/URI.
- **fields**: Used in **GET** operations to filter the results, by selecting only
the fields that you are interested in (comma-separated values). E.g.
http://10.0.0.1/api/v4/system/device?fields=description,location. If the device
does not support such feature, it will return all fields.
- **offset/limit**: Used in **GET** operations for paging the results. E.g.
http://10.0.0.1/api/v4/system/device?offset=1&limit=50.
- **custom_fields**: Some devices may return optional fields that does not affect
the device configuration/operation. It will be used only for informational purpose.
The return format is: **{"key":"value"}**.
- **enabled**: Service/entry/configuration is enabled.
<a name="bitmap"></a>
- **bitmap**: Bitmap is the technique to use one numeric value that represents multiple
options. Each option maps to a **bit** which has a unique **weight**. The final
**bitmap_value** will be the sum of each option **weight**. As an example, consider
the following options (Wireless modes):
    - AP mode:       bit0 (weight = 1)
    - Client mode:   bit1 (weight = 2)
    - Repeater mode: bit2 (weight = 4)

So, if the device supports only **AP** mode, **bitmap_value** will be equals 1.
If **AP** and **Repeater** modes are available, **bitmap_value** will be equals
5, and so on.

## API versioning
<a name="api_version_endpoint"></a>
This API uses the version format: **MAJOR.MINOR.PATCH** notation, where:
- **MAJOR**: Main API endpoint structure. Changes on this number makes it incompatible
with other versions. For instance, this API has **MAJOR** version **4**, which is
incompatible with API version **3**.
- **MINOR**: Indicates that a new endpoint has been added.
- **PATCH**: Indicates that a new field/action has been added.

API version is accessible through **/api** (root endpoint) under the field
**api_version**. E.g.
**http://10.0.0.1/api** or **http://10.0.0.1/cgi-bin/api**

## Special Endpoints
There are some special resources that **may** be available to any other resource:
- **/endpoints**: List all endpoints available after the current one. E.g.
**system/endpoints**.
- **/active**: Returns the applied configuration. If the device has **auto_apply=false**
as default behavior, then this endpoint will show the config that is actually
applied and running. E.g. **system/device/active**.
- **/counters**: Interface counters such as tx_bytes, rx_bytes... E.g.
**interfaces/ethernets/counters**. Resulting values are calculated by the sum of all the ethernets values.
- **/stats**: Statistics data such as packets per second, throughput... E.g.
**interfaces/ethernets/stats**. Resulting values are calculated by the sum of all the ethernets values.
- **/brief**: Briefing/summary information regarding any endpoint and it's children
resources. E.g. **interfaces/wifi/brief**.
- **/actions**: Actions that the device may perform such as reboot, survey...
E.g. POST **system/actions**
<pre><code>
{
    "type": "reboot"
}
</code></pre>

If supported, you may use the option **async:true**, which means that you need
to keep calling your endpoint (GET method) in order to know the action status until
it returns the actual data. That is useful if the action to be perform will take
some time to complete, avoiding timeout issues.

Some actions might need an extra **data** object to send additional information
to the action to be executed.
- /app_traits: Special characteristics to be handled by API consumer. More details
below.

### APP traits
The idea behind the special endpoint **app_traits** is to be able to aid API consumer
(WEB or another automated system) prior rendering some options. As an example,
lets say that a particular device supports wifi scheduling and does not support
firewall scheduling. In order to avoid any error during the POST/PUT operations,
we first proceed with a **GET** into **services/firewall/app_traits**. The device
might return something like this:
<pre><code>
{
    "schedule": false
}
</code></pre>

That means: **schedule** field should not be used, since it is not supported.

When the whole feature is **not** supported, the **enabled** field might be used. For example, if a device does not support **Captive Portals**, the **GET** into **services/captive_portals** might return:
<pre><code>
{
    "enabled": false
}
</code></pre>

**app_traits** have its own version notation **MAJOR.MINOR**:
- **MAJOR**: There is some feature/option that must not be used since it might
cause a malfunction.
- **MINOR**: Indicates that a new option has been added.

The **app_traits** version is also accessible through **/api** (root endpoint)
under the field **app_traits_version**.


## Error/Warning Returns
When some error (HTTP response status code 400) or warning (HTTP response status
code 200) occurs, the resulting payload will follow this layout:
<pre><code>
{
    "errors":[
        {
            "code": 1,
            "message": "Password should have at least 12 char...",
            "fields":[
                "Password"
            ]
        }
    ],
    "warnings":[
        {
            "code": 1,
            "message": "Maximum size 64 reached, part of the string has been truncated.",
            "fields": [
                "description"
            ]
        }
    ]
}
</code></pre>
Where the **message** contains some additional information regarding the error
**code**, and **fields** is an array of the fields affected by the error **code**.

Code values:
- 0: Required field
- 1: Validation error
- 2: Invalid Payload
- 3: Field not used/not supported
- 4: This field cannot use duplicated elements
- 5: Max objects entries reached

Code priority:
Error code (400) and specific error code (40x) have priority over warning code (200) and specific error code (40x) has priority over error code (400).

### Warning when creating objects
If some value of the objects cannot be repeated and the user sent they repeated, the API will ignore repeated elements or objects.
Therefore, if just one object is created will need to return the id in the body, if more then one object is created just return warnings.
An example with just one object created:
<pre><code>
{
    "id": "lan2"
    "warning": [
        {
            "message": "Field has duplicated elements",
            "fields": [ipv4],
            "code": 4
        }
    ]
}
</code></pre>
### Server Error
When server error occurs should be returned the correct code and follow this layout:
<pre><code>
{
    "message": "Service is not currently available, try again later.",
    "code": "error"
}
</code></pre>

The code for the error above should be 503, Service Unavailable. Other HTTP code are supported and has to follow the format defined

## Authentication
In order to use any API resource, you must to be authenticated. The only exceptions
are the [**api version**](#api_version_endpoint) endpoint and **system/sessions**
(POST method).

Upon authentication, you will receive a **token** that must be used in every other
resources, by setting your HTTP header **Authorization** value equals to your
**token**.

The **token** is obtained by sending a **POST** to [**system/sessions**](#sessions_login):
<pre><code>
{
    "login": "admin",
    "password": "admin"
}
</code></pre>

Expected return:
<pre><code>
{
    "token": "e6223ae4a109705437fe69263dfb7ad3"
}
</code></pre>

## API [/api]
Take a look at [API versioning](#api_version_endpoint).

+ Attributes (object)
    + `api_version`: 1.3.0      (string)
    + `app_traits_version`: 2.0 (string)

### Get API version [GET]
+ Response 200 (application/json)
    + Attributes (API)

# Group System
Device related information/configuration/actions.

## brief [/system/brief]

### GET
Retrieve a summary from system group resources.

+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `sessions`: 2            (number) - Active sessions.
        + `users`: 1               (number) - Number of users available (registered).
        + `schedules`: 10          (number) - Number of configured schedules.
        + `uptime`: 90             (number, required) - System uptime (seconds).
        + `date`: `2019-05-17`     (string) - System local date.
        + `time`: 20:20:39+00:00   (string) - System local time.
        + `timestamp`: 1558112740  (number,required) - Unix timestamp.
        + `description`: My device (string) - Device description.
        + `alias`: My AP           (string)
        + `model`: AP 360          (string,required) - Device model.
        + `fw_version`: 2.3.0      (string,required) - Device firmware version.
        + `default_config`: true   (boolean) - Device is currently using default config (factory default).
        + `config_hash`: 4fa32...  (string)  - Currently applied configuration hash.
        + `apply_pending`: true    (boolean) - There are pending settings to be applied.
        + `user_default`: admin    (string)  - Device default username (login).
        + `password` (object)
            + `value`: admin (string)    - Device default password (login).
            + `changed`: false (boolean) - Device is currently using default password.

    + Schema

            {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                    "sessions": {
                        "description": "Active sessions",
                        "type": "integer",
                        "minimum":1
                    },
                    "users": {
                        "description": "Number of users available (registered).",
                        "type": "integer",
                        "minimum":1
                    },
                    "schedules": {
                        "description": "Number of configured schedules.",
                        "type": "integer",
                        "minimum":0
                    },
                    "uptime": {
                        "description": "System uptime (seconds).",
                        "type": "integer",
                        "minimum":0
                    },
                    "date": {
                        "description": "System local date.",
                        "type": "date"
                    },
                    "time": {
                        "description": "System local time.",
                        "type": "string",
                        "pattern":"time"
                    },
                    "timestamp": {
                        "description": "Unix timestamp.",
                        "type": "integer",
                        "minimum":1641006000
                    },
                    "description": {
                        "description": "Device description.",
                        "type": "string",
                        "maxLength": 64
                    },
                    "alias": {
                        "description": "Device alias.",
                        "type": "string",
                        "maxLength": 32
                    },
                    "model": {
                        "description": "Device model.",
                        "type": "string",
                        "maxLength": 50
                    },
                    "fw_version": {
                        "description": "Device firmware version.",
                        "type": "string",
                        "pattern":"^([0-9]+)[.]([0-9]+)[.](\S+)$"
                    },
                    "default_config": {
                        "description": "Device is currently using default config (factory default).",
                        "type": "boolean"
                    },
                    "config_hash": {
                        "description": "Currently applied configuration hash.",
                        "type": "string",
                        "minLength": 8
                    },
                    "apply_pending": {
                        "description": "There are pending settings to be applied.",
                        "type": "boolean"
                    },
                    "user_default": {
                        "description": "Device default username (login).",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 20
                    },
                    "password": {
                        "description": "Device default password info.",
                        "type": "object",
                        "properties": {
                            "value": {
                                "description": "Device default password (login).",
                                "type": "string",
                                "minLength": 4,
                                "maxLength": 63
                            },
                            "changed": {
                                "description": "Device is currently using default password.",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "value",
                            "changed"
                        ]
                    }
                },
                "required": [
                    "uptime",
                    "timestamp",
                    "model",
                    "fw_version"
                ]
            }
## system [/system]
+ Attributes (object)
    + `date`: `2019-05-17`    (string, required) - System local date.
    + `time`: 13:00:00+00:00  (string, required) - System local time.
    + `timestamp`: 1558112740 (number, required) - Unix timestamp.

### Retrieve system information [GET]
Retrieve basic system information.

+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (system)
    + Schema
            {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "date",
                        "pattern": "^([0-9]+)-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$"
                    },
                    "time": {
                        "type": "string",
                        "format": "time",
                        "pattern": "^(2[0-3]|[01][0-9]):?([0-5][0-9]):?([0-5][0-9])(Z|[+-](?:2[0-3]|[01][0-9])(?::?(?:[0-5][0-9]))?)$"
                    },
                    "timestamp": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 2147483648
                    }
                },
                "required": [
                    "date",
                    "time",
                    "timestamp"
                ]
            }

## device [/system/device]
<a name="system_device"></a>
+ Attributes (object)
    + `description`: My device   (string)  - Device description.
    + `alias`: My AP             (string)
    + `radius_nas_id`: ap_office (string)  - Radius NAS ID. IF empty, device's mac address will be used.
    + `auto_apply`: false        (boolean) - If set to true, any POST/PUT/DELETE operation will be automatically applied.
    + `location` (object) - Decimal degrees notation.
        + `latitude`: 100.234 (number)
        + `longitude`: 30.222 (number)

### Retrieve device information [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (device)
    + Schema
            {
            "https://json-schema.org/draft/2019-09/schema",
            "type": "object",
            "properties": {
                "description": {
                "description" : "Device description.",
                "type": "string",
                "maxLength" : 64
                },
                "alias": {
                "description" : "Device alias.",
                "type": "string",
                "maxLength" : 32
                },
                "radius_nas_id": {
                "description": "Radius NAS ID. IF empty, device's mac address will be used.",
                "type": "string",
                "maxLength": 128
                },
                "auto_apply": {
                "type": "boolean"
                },
                "location": {
                "type": "object",
                "properties": {
                    "latitude": {
                    "type": "number",
                    "minimum" : -90,
                    "maximum" : 90
                    },
                    "longitude": {
                    "type": "number",
                    "minimum" : -180,
                    "maximum" : 180
                    }
                },
                "required": [
                    "latitude",
                    "longitude"
                ]
                }
            },
            "required": [
                "auto_apply",
                "alias"
            ]
            }

### Update device information [PUT]
+ Attributes (device)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3
    + Schema
            {
            "https://json-schema.org/draft/2019-09/schema",
            "type": "object",
            "properties": {
                "description": {
                "description" : "Device description.",
                "type": "string",
                "maxLength" : 64
                },
                "alias": {
                "description" : "Device alias.",
                "type": "string",
                "maxLength" : 32
                },
                "radius_nas_id": {
                "description": "Radius NAS ID. IF empty, device's mac address will be used.",
                "type": "string",
                "maxLength": 128
                },
                "auto_apply": {
                "type": "boolean"
                },
                "location": {
                "type": "object",
                "properties": {
                    "latitude": {
                    "type": "number",
                    "minimum" : -90,
                    "maximum" : 90
                    },
                    "longitude": {
                    "type": "number",
                    "minimum" : -180,
                    "maximum" : 180
                    }
                },
                "required": [
                    "latitude",
                    "longitude"
                ]
                }
            },
            "required": [
                "auto_apply",
                "alias"
            ]
            }

+ Response 204

## firmware [/system/firmware]

### Upgrade status [GET]
Firmware upgrade status.

+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `downloading`: true (boolean) - Downloading firmware file.
        + `percent`: 20       (number) - Downloading progress (percentage).
        + `status`: message   (string) - Additional status message.

### Upgrade (external link) [PUT]
Upgrade device's firmware using remote (HTTP/FTP) firmware file.
- Some devices may only accept HTTP method.

+ Request (application/json)
    + Attributes (object)
        + `uri`: http://192.168.1.100/firmware.bin (string) - Remote firmware file location.

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Upgrade [POST]
Upgrade device's firmware using local file. Depending on the device, you might
upload a raw binary file at once. In this case, you must not send any extra
payload and your **Content-Type** header must be set to **application/octet-stream**.

For most devices, you should send base64 encoded chunks up to 400
Kbytes each.

+ Request (application/json)
    + Attributes (object)
        + `current`: 1             (number, required) - Current chunk.
        + `total`: 20              (number, required) - Number of chunks.
        + `content`: base64encoded (string, required) - Base64 encoded firmware file.

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## log [/system/log{?download}]
<a name="log_levels"></a>
**Log levels**:
- `0`: LOG_EMERG
- `1`: LOG_ALERT
- `2`: LOG_CRIT
- `3`: LOG_ERR
- `4`: LOG_WARNING
- `5`: LOG_NOTICE
- `6`: LOG_INFO
- `7`: LOG_DEBUG

### Read [GET]
+ Parameters
    + `download` (boolean, optional) - Download log file.
        + Default: false

+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3
+ Response 200 (application/json)
    + Attributes (object)
        + `source`: 1 (enum[number])
            + Members
                + `0` - Kernel
                + `1` - User Space
        + `level`: 6                                         (enum[number]) - [Log level](#log_levels)
        + `timestamp`: 1558021461157                         (number)
        + `message`: netifd: Interface 'loopback' is enabled (string)

+ Request download=true
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `content`: base64encoded (string) - Base64 encoded data.

## actions [/system/actions]
+ Attributes (object)
    + `type`: reboot (enum[string], required)
        + Members
            + `reboot`
            + `commit` - Save configuration into non volatile storage (flash memory).
            + `apply` - Apply saved configurations.
            + `revert` - Ignore configuration changes that were not committed.
            + `save_config_as_default` - Save current configuration as factory default configuration.
            + `search` - Perform a device search. E.g. LED will blink as a visual indication that you are operating on that device.
            + `set_date` - Change system date and time (YYYY-MM-DD HH:MM:SS).
            + `factory_default` - Return device settings to factory default.
            + `wps` - Start WPS function. E.g. It's used for EasyMesh APs synchronization.
    + `async`: false (boolean)
    + `data`:  (object)

### POST [POST]
+ Request apply (application/json)
    + Attributes (object)
        + `type`: apply (string)
        + `data` (object)
            + `rollback` (object)
                + `enabled`: true (boolean)
                + `timeout`: 1000 (number) - timeout (seconds).

    + Schema

            {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
                "type": {
                "type": "string",
                "minLength": 1
                },
                "data": {
                "type": "object",
                "properties": {
                    "rollback": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                        "type": "boolean"
                        },
                        "timeout": {
                        "type": "integer"
                        }
                    },
                    "required": [
                        "enabled"
                    ]
                    }
                }
                }
            },
            "required": [
                "type"
            ]
            }

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `config_hash`: 4fa32... (string, required) - Currently applied configuration hash.

    + Schema

            {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "properties": {
                "config_hash": {
                "type": "string",
                "minLength": 8
                }
            },
            "required": [
                "config_hash"
            ]
            }

+ Request set_date (application/json)
    + Attributes (object)
        + `type`: set_date (string)
        + `data` (object, required)
            + `date`: `2018-11-13T20:20:39+00:00` (string, required)
    + Schema

            {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
                "type": {
                "type": "string",
                "minLength": 1
                },
                "data": {
                "type": "object",
                "properties": {
                    "date": {
                    "type": "date"
                    }
                },
                "required": [
                    "date"
                ]
                }
            },
            "required": [
                "type"
            ]
            }
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

+ Request wps (application/json)
    + Attributes (object)
        + `type`: wps (string)
        + `data` (object)
            + `sync` (boolean)

    + Schema

            {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
                "type": {
                "type": "string",
                "minLength": 1
                },
                "data": {
                "type": "object",
                "properties": {
                    "sync": {
                    "type": "boolean"
                    }
                },
                "required": [
                    "sync"
                ]
                }
            },
            "required": [
                "type"
            ]
            }

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

+ Request (application/json)
    + Attributes (actions)

    + Schema

            {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "type": "object",
            "properties": {
                "type": {
                "type": "string",
                "minLength": 1
                },
                "async": {
                "type": "boolean"
                }
            },
            "required": [
                "type"
            ]
            }

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group System Config

## config [/system/config]
+ Attributes (object)
    + `content`: base64encoded (string) - Base64 encoded data.

### Download configuration [GET]
Download device's configuration file using base64 encoded data.

+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (config)
    + Schema
            {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string",
                        "minLength": 512,
                        "maxLength": 262144
                    }
                },
                "required":["content"]
            }

### Upload configuration [POST]
Upload configuration file using base64 encoded data.

+ Request (application/json)
    + Attributes (object)
        + `current`: 1             (number, required) - Current chunk.
        + `total`: 1               (number, required) - Number of chunks.
        + `content`: base64encoded (string, required) - Base64 encoded configuration file.

    + Headers

            Authorization: Token e6223a...fb7ad3
    + Schema
            {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                    "current": {
                        "type": "number",
                        "minimum": 1
                    },
                    "total": {
                        "type": "number",
                        "minimum": 1
                    },
                    "content": {
                        "type": "string",
                        "minLength": 512
                    }
                },
                "required": [
                    "current",
                    "total",
                    "content"
                ]
            }


+ Response 204

## active [/system/config/active]

### Retrieve [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `config_hash`: 4fa32... (string)  - Currently applied configuration hash.
        + `apply_pending`: true   (boolean) - There are pending settings to be applied.
        + `rollback_status` (object) - The rollback status of the system.
            + `enabled`: true (boolean)
            + `timeout`: 1000 (number) - timeout (seconds).
    + Schema
            {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                    "config_hash": {
                        "type": "string",
                        "minLength": 8
                    },
                    "apply_pending": {
                        "type": "boolean"
                    },
                    "rollback_status": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "boolean"
                            },
                            "timeout": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 2147483647
                            }
                        }
                    }
                },
                "required": [
                    "config_hash"
                ]
            }


# Group System Sessions

## sessions [/system/sessions]

### Login [POST]
<a name="sessions_login"></a>
+ Request (application/json)
    + Attributes (object)
        + `login`: admin      (string, required)
        + `password`: admin   (string, required)
        + `idle_timeout`: 300 (number) - Idle timeout (seconds).

    + Schema

            {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                    "login": {
                        "description": "Login value.",
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 20
                    },
                    "password": {
                        "description": "Password value.",
                        "type": "string",
                        "minLength": 4,
                        "maxLength": 63
                    },
                    "idle_timeout": {
                        "description": "Idle timeout(seconds).",
                        "type": "integer",
                        "minimum": 300,
                        "maximum": 86400
                    }
                },
                "required": [
                "login",
                "password",
                ]
            }

+ Response 201 (application/json)
    + Attributes (object)
        + `token`: e6223ae4a109705437fe69263dfb7ad3 (string, required)
    + Schema
        {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "properties": {
        "token": {
            "description": "Response token.",
            "type": "string",
            "minLength": 8,
            "maxLength": 128
        }
    },
    "required": [
       "token"
    ]
}

## session [/system/sessions/{token}]
+ Parameters
    + `token` (string) - Session token.

### Logout [DELETE]
+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## active [/system/sessions/active]

### Retrieve [GET]
+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (object)
            + `user`: admin (string)
            + `token`: e6223ae4a109705437fe69263dfb7ad3 (string) - Session token.
            + `expires`: 263 (number) - Time to expire session (seconds).
            + `idle_timeout`: 300 (number) - Idle timeout (seconds).

    + Schema
            {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "array",
                "items": [{
                    "type": "object",
                    "properties": {
                        "user": {
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 20
                        },
                        "token": {
                            "type": "string",
                            "minLength": 8,
                            "maxLength": 128
                        },
                        "expires": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 86400
                        },
                        "idle_timeout": {
                            "type": "integer",
                            "minimum": 300,
                            "maximum": 86400
                        }
                    },
                    "required": [
                        "user",
                        "token",
                        "expires"
                    ]
                }]
            }

# Group System User Roles
<a name="user_roles"></a>
You can use user roles to control API access to each desired endpoint or globally
by HTTP method (**GET/PUT/POST/DELETE**).
- You cannot delete a role that is referenced by any user (**references** > 0).

Example of a role that grants **GET** operation to all endpoints:
<pre><code>
{
    "name": "guest",
    "get": true,
    "put": false,
    "post": false,
    "delete": false,
    "default": false,
    "uris": []
}
</code></pre>

Example of a role that grants **GET** operation only for **system/device**
endpoint:
<pre><code>
{
    "name": "guest",
    "get": false,
    "put": false,
    "post": false,
    "delete": false,
    "default": false,
    "uris": [
        {
            "endpoint": "system/device",
            "verbs": ["GET"]
        }
    ]
}
</code></pre>

Example of a role that grants **GET** operation to all **system** endpoints:
<pre><code>
{
    "name": "guest",
    "get": false,
    "put": false,
    "post": false,
    "delete": false,
    "default": false,
    "uris": [
        {
            "endpoint": "system",
            "verbs": ["GET"]
        }
    ]
}
</code></pre>

## roles [/system/roles]
+ Attributes (object)
    + `name`: guest    (string, required)
    + `get`: true      (boolean, required) - Whether GET is globally permitted.
    + `put`: true      (boolean, required) - Whether PUT is globally permitted.
    + `post`: true     (boolean, required) - Whether POST is globally permitted.
    + `delete`: true   (boolean, required) - Whether DELETE is globally permitted.
    + `uris` (array)
        + (object)
            + `endpoint`: system/device (string)
            + `verbs`: POST             (array[string])

### Retrieve all roles [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (roles)
            + `default`: false (boolean) - When true, indicates that this object cannot be deleted.
            + `id`: guest     (string)
            + `references`: 1 (number) - Number of references to this role.
    + Schema
        {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "array",
        "items": [
            {
            "type": "object",
            "properties": {
                "name": {
                "type": "string",
                "maxLength": 64,
                "minLength":4
                },
                "get": {
                "type": "boolean"
                },
                "put": {
                "type": "boolean"
                },
                "post": {
                "type": "boolean"
                },
                "delete": {
                "type": "boolean"
                },
                "uris": {
                "type": "array",
                "items": [
                    {
                    "type": "object",
                    "properties": {
                        "endpoint": {
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 3
                        },
                        "verbs": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 4,
                        "items": [
                            {
                            "type": "string",
                            "enum": ["GET", "PUT", "POST", "DELETE"]
                            }
                        ]
                        }
                    },
                    "required": [
                        "endpoint",
                        "verbs"
                    ]
                    }
                ]
                },
                "default": {
                "type": "boolean"
                },
                "id": {
                "type": "string",
                "maxLength": 128,
                "minLength": 1
                },
                "references": {
                "type": "integer",
                "minimum": 0
                }
            },
            "required": [
                "name",
                "get",
                "put",
                "post",
                "delete"
            ]
            }
        ]
        }


### Create roles [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[roles])
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: guest (string)

### Delete all roles [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## role [/system/roles/{id}]
+ Parameters
    + `id` (string) - The ID of the desired role.

### Retrieve role settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (roles)
        + `default`: false (boolean) - When true, indicates that this object cannot be deleted.
        + `references`: 1 (number) - Number of references to this role.

### Update role settings [PUT]
+ Attributes (roles)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3
   + Schema
            {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "properties": {
                "name": {
                "type": "string",
                "maxLength": 64,
                "minLength": 4
                },
                "get": {
                "type": "boolean"
                },
                "put": {
                "type": "boolean"
                },
                "post": {
                "type": "boolean"
                },
                "delete": {
                "type": "boolean"
                },
                "uris": {
                "type": "array",
                "items": [
                    {
                    "type": "object",
                    "properties": {
                        "endpoint": {
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 3
                        },
                        "verbs": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 4,
                        "items": [
                            {
                            "type": "string",
                            "enum": [
                                "GET",
                                "PUT",
                                "POST",
                                "DELETE"
                            ]
                            }
                        ]
                        }
                    },
                    "required": [
                        "endpoint",
                        "verbs"
                    ]
                    }
                ]
                }
            },
            "required": [
                "name",
                "get",
                "put",
                "post",
                "delete",
                "uris"
            ]
            }

+ Response 204

### Delete role [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group System Users
Local users that are allowed to access this device configurations.

## users [/system/users]
+ Attributes (object)
    + `name`: John                    (string) - User name.
    + `login`: admin                  (string, required)
    + `role`: admin                   (string) - User role according to [user roles](#user_roles).
    + `allow_weak_password`: false    (boolean)

### Retrieve all users [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (users)
            + `default`: false (boolean) - When true, indicates that this object cannot be deleted.
            + `id`: admin              (string)
            + `default_password`: true (boolean) - User is currently using default password.

    + Schema
            {
                "$schema": "http://json-schema.org/draft/2020-12/schema",
                "type": "array",
                "minItems": 1,
                "maxItems": 8,
                "items": [
                {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 253
                        },
                        "login": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 254
                        },
                        "role": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 253
                        },
                        "allow_weak_password": {
                            "type": "boolean"
                        },
                        "default": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 128
                        },
                        "default_password": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "login",
                        "role",
                        "allow_weak_password",
                        "id",
                        "default_password"
                    ]
                }
                ]
            }

### Create users [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array)
        + (users)
            + `password`: 1234                (string, required)
    + Schema
            {
                "$schema": "http://json-schema.org/draft/2020-12/schema",
                "type": "array",
                "minItems": 1,
                "maxItems": 8,
                "items": [
                {
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 253
                        },
                        "login": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 254
                        },
                        "password": {
                            "type": "string",
                            "minLength": 4,
                            "maxLength": 63
                        },
                        "role": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 253
                        },
                        "allow_weak_password": {
                            "type": "boolean"
                        },
                        "default": {
                            "type": "boolean"
                        },
                        "default_password": {
                            "type": "boolean"
                        }
                    },
                    "required": [
                        "login"
                    ]
                }
                ]
            }

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: guest (string)

    + Schema
            {
                "$schema": "http://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                    "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 128
                    }
                }
            }

### Delete all users [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## user [/system/users/{id}]
+ Parameters
    + `id` (string) - The ID of the desired user.

### Retrieve user settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (users)
        + `default`: false (boolean) - When true, indicates that this object cannot be deleted.
        + `default_password`: true (boolean) - User is currently using default password.

    + Schema
            {
                "$schema": "http://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 253
                    },
                    "login": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 254
                    },
                    "role": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 253
                    },
                    "allow_weak_password": {
                        "type": "boolean"
                    },
                    "default": {
                        "type": "boolean"
                    },
                    "default_password": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "login",
                    "role",
                    "allow_weak_password",
                    "default_password"
                ]
            }

### Update user settings [PUT]
+ Attributes (users)
    + `current_password`: user current password (string, required)
    + `new_password`: user new password (string, optional)
    + `new_password_verify`: user new password double verification (string, optional)

+ Schema
    {
        "$schema": "http://json-schema.org/draft/2020-12/schema",
        "type": "object",
        "properties": {
            "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 253
            },
            "login": {
                "type": "string",
                "minLength": 1,
                "maxLength": 254
            },
            "role": {
                "type": "string",
                "minLength": 1,
                "maxLength": 253
            },
            "allow_weak_password": {
                "type": "boolean"
            },
            "current_password": {
                "type": "string",
                "minLength": 4,
                "maxLength": 63
            },
            "new_password": {
                "type": "string",
                "minLength": 8,
                "maxLength": 63
            },
            "new_password_verify": {
                "type": "string",
                "minLength": 8,
                "maxLength": 63
            }
        },
        "required": [
            "login",
            "current_password"
        ]
    }

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete user [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group System Schedules
<a name="system_schedules"></a>
These are the schedules database which you can use and refer them later on any
feature that supports scheduling, such as firewall rules, wifi, LED...
- You cannot delete a schedule that is referenced by any other endpoint
(**references** > 0).

## schedules [/system/schedules]
+ Attributes (object)
    + `name`: sleep           (string, required)
    + `description`: Bed time (string)
    + `enabled`: true         (boolean, required)
    + `schedules` (array)
        + (object)
            + `days` (object)
                + `sun`: false (boolean)
                + `mon`: true  (boolean)
                + `tue`: true  (boolean)
                + `wed`: true  (boolean)
                + `thu`: true  (boolean)
                + `fri`: true  (boolean)
                + `sat`: false (boolean)
            + `intervals` (array) - Time intervals.
                + (object)
                    + `start`: 22:00 (string)
                    + `end`: 08:00   (string)
    + `periods` (array) - Date intervals.
        + (object)
            + `start`: 01/03/2019 (string)
            + `end`: 01/12/2019   (string)

### Retrieve all schedules [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (schedules)
            + `id`: sleep     (string)
            + `references`: 1 (number) - Number of references to this schedule.

### Create schedules [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[schedules])

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: sleep (string)

### Delete all schedules [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## schedule [/system/schedules/{id}]
+ Parameters
    + `id` (string) - The ID of the desired schedule.

### Retrieve schedule settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (schedules)
        + `references`: 1 (number) - Number of references to this schedule.

### Update schedule settings [PUT]
+ Attributes (schedules)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete schedule [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group System Leds
System status LEDs.

## brief [/system/leds/brief]

### GET
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `quantity`: 1 (number) - Number of LEDs available.
        + `leds`:       (array)
            + (object)
                + `id`: cfg01          (string)
                + `supported_colors`:  (array[string])
                    + Members
                        + `green`
                        + `yellow`
                       + `red`
                + `supported_actions`: (array[string])
                    + Members
                        + `on`
                        + `off`

## leds [/system/leds]
+ Attributes (object)
    + `enabled`: true (boolean, required)
    + `alias`: status (string) - Short name for the LED.
    + `color`: green  (string)
    + `action`: off   (string)
    + `schedule`      (object)
        + `enabled`: false (boolean)
        + `id`: sleep      (string) - [Schedule id](#system_schedules).

### Retrieve all leds [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (leds)
            + `id`: cfg01 (string)

## led [/system/leds/{id}]
+ Parameters
    + `id` (string) - The ID of the desired LED.

### Retrieve led settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (leds)

### Update led settings [PUT]
+ Attributes (leds)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Interfaces

## brief [/interfaces/brief]

### GET
+ Request
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `wifi` (object)
            + `phy_interfaces`: `radio0`, `radio1` (array[string])
            + `virtual_interfaces`: `wlan0`, `wlan1`(array[string])

        + `ethernets` (object)
            + `phy_interfaces`: `eth0`, `eth1` (array[string])
            + `virtual_interfaces`: `eth0.100`, `eth1.100` (array[string])

        + `pons` (object)
            + `phy_interfaces`: `nas0`, `nas1` (array[string])
            + `virtual_interfaces`: `nas0_0`, `nas0_1` (array[string])

## counters [/interfaces/counters]

### Retrieve all interfaces counters [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (object)
            + `wifi` (Counters Base)
        + (object)
            + `pons` (PON Counters Base)
        + (object)
            + `ethernets` (Counters Base)

## stats [/interfaces/stats]

### Retrieve all interfaces statistics [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (object)
            + `wifi` (Stats Base)
        + (object)
            + `pons` (Stats Base)
        + (object)
            + `ethernets` (Stats Base)

# Group Interfaces WiFi

## wifi settings [/interfaces/wifi]

+ Attributes (object)
    + `band_steering`:(object)
        + `ssids`: guest, owner (array[string]) - List of SSIDs currently in use.
        + `enabled`: true (boolean)
        + `mode`: 0 (enum[number])
            + Members
                + `0`- load balance
                + `1`- 5g prioritization

### Retrieve wifi settings [GET]
+ Request
    + Headers
        Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (wifi settings)
    + Schema
            {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "properties": {
                "bandsteering": {
                    "title": "Bandsteering",
                    "type": "object",
                    "properties": {
                        "ssids": {
                            "title": "Ssids",
                            "type": "array",
                            "default": [],
                            "items":{
                                "title": "Items",
                                "type": "string",
                                "default": "",
                                "examples": [
                                    "ssid1"
                                ],
                                "pattern": "^.*$"
                            }
                        },
                        "enabled": {
                            "title": "Enabled",
                            "type": "boolean",
                            "examples": [
                                true
                            ],
                            "default": true
                        },
                        "mode": {
                            "title": "Mode",
                            "type": "integer",
                            "examples": [
                                1
                            ],
                            "minimum": 0,
                            "maximum": 1,
                            "default": 0
                            }
                        }
                    }

                }
            }


### Update wifi settings [PUT]
+ Attributes (wifi settings)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

    + Schema
            {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "properties": {
                "bandsteering": {
                    "title": "Bandsteering",
                    "type": "object",
                    "properties": {
                        "ssids": {
                            "title": "Ssids",
                            "type": "array",
                            "default": [],
                            "items":{
                                "title": "Items",
                                "type": "string",
                                "default": "",
                                "examples": [
                                    "ssid1"
                                ],
                                "pattern": "^.*$"
                            }
                        },
                        "enabled": {
                            "title": "Enabled",
                            "type": "boolean",
                            "examples": [
                                true
                            ],
                            "default": true
                        },
                        "mode": {
                            "title": "Mode",
                            "type": "integer",
                            "examples": [
                                1
                            ],
                            "minimum": 0,
                            "maximum": 1,
                            "default": 0
                            }
                        }
                    }
                }
            }
+ Response 204

## brief [/interfaces/wifi/brief]

### GET
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `ssids_num`: 1 (number) - Number of SSIDs configured.
        + `radios`: 2    (number) - Number of radios available.
        + `nodes`: 200   (number) - Number of associated clients.

## counters [/interfaces/wifi/counters]

### Retrieve all wifi counters [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (Counters Base)

## stats [/interfaces/wifi/stats]

### Retrieve all wifi statistics [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (Stats Base)

## son [/interfaces/wifi/son]
[Self Organized Network](#wifi_son) settings.

+ Attributes (object)
    + `mode`: 0 (enum[number])
        + Members
            + `0` - Disabled
            + `1` - Master node
            + `2` - Repeater node
    + `handover` (object)
        + `enabled`: false (boolean)
    + `load_balance` (object)
        + `mode`: 0 (enum[number])
            + Members
                + `0` - Disabled
                + `1` - Load Balance
                + `2` - 5 GHz prioritization

### Retrieve son settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (son)

### Update son settings [PUT]
+ Attributes (son)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## air time fairnesses [/interfaces/wifi/air_time_fairnesses]
[Air Time Fairness](#air_time_fairness) settings.

+ Attributes (object)
    + `radio`: radio0 (string) - Radio ID.
    + `ssid`: cfg01   (string) - SSID ID.
    + `percent`: 20   (number) - Air time percentage.

### Retrieve all atfs [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (air time fairnesses)
            + `id`: cfg02 (string)

### Create atfs [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[air time fairnesses])
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: cfg02 (string)

### Delete all atfs [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## atf [/interfaces/wifi/air_time_fairnesses/{id}]
+ Parameters
    + `id` (string) - The ID of the desired atf.

### Retrieve atf settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (air time fairnesses)

### Update atf settings [PUT]
+ Attributes (air time fairnesses)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete atf [DELETE]
+ Request ()
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Interfaces WiFi SSIDs

## brief [/interfaces/wifi/ssids/brief]

### GET
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `ssids`: Guest    (array[string]) - List of SSIDs currently in use.
        + `nodes`: 200      (number) - Number of associated clients.
        + `acl_entries`: 30 (number) - Number of ACL entries.

## ssids nodes [/interfaces/wifi/ssids/nodes]

### Retrieve clients from all SSIDs [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (WiFi Nodes Base)
            + `ssid`: Guest (string, required)

    + Schema
            {
            "$schema": "http://json-schema.org/draft/2020-12/schema",
            "type": "array",
            "minItems": 0,
            "maxItems": 200,
            "items": [
                {
                "type": "object",
                "properties": {
                    "mac": {
                    "type": "string",
                    "minLength": 17,
                    "maxLength": 17
                    },
                    "signal": {
                    "type": "integer",
                    "minimum": -100,
                    "maximum": -1
                    },
                    "uptime": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                    },
                    "idle": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                    },
                    "tx_rate": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                    },
                    "rx_rate": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                    },
                    "phy_mode": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 31
                    },
                    "hostname": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 253
                    },
                    "description": {
                    "type": "string",
                    "minLength": 0,
                    "maxLength": 64
                    },
                    "rx_packets": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                    },
                    "rx_bytes": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                    },
                    "tx_packets": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                    },
                    "tx_bytes": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 4294967295
                    },
                    "ip_addresses": {
                    "type": "array",
                    "minItems": 0,
                    "maxItems": 5,
                    "items": [
                        {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 15
                        }
                    ]
                    },
                    "ip_mode": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2
                    },
                    "ssid": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32
                    }
                },
                "required": [
                    "mac",
                    "signal",
                    "tx_rate",
                    "rx_rate",
                    "ssid"
                ]
                }
            ]
            }

## ssids [/interfaces/wifi/ssids]
+ Attributes (object)
    + `enabled`: true (boolean)
    + `radios`: radio0 (array[string], required) - List of radio IDs that will use this SSID.
    + `ssid`: Guest (string, required)
    + `broadcast`: true (boolean) - Enable SSID broadcast. When false, users will have to connect to it manually.
    + `atf_percent`: 10 (number) - [Air Time Fairness](#air_time_fairness) percentage.
    + `802.11kv`: false (boolean) - Enables 802.11kv protocol.
    + `802.11r`: false (boolean) - Enables 802.11r protocol.
    + `security` (SSID Security Base, required)
    + `schedule` (object)
        + `enabled`: false (boolean)
        + `id`: sleep      (string) - [Schedule id](#system_schedules).

### Retrieve all SSIDs [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (ssids)
            + `interfaces`: wlan0 (array[string]) - Interface which is being used by this SSID.
            + `default`: false (boolean) - When true, indicates that this object cannot be deleted.
            + `id`: cfg01 (string)
            + `security` (SSID Security Base)
                + `supported_auth_type`: (array[number]) - List of supported auth_types
                    + 0
                    + 3
                    + 5
                + `supported_encryption`: (array[number]) - List of supported encryptions
                    + 0
                    + 1

    + Schema

            {
                "$schema": "http://json-schema.org/draft/2020-12/schema",
                "type": "array",
                "items": [{
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "radios": {
                            "type": "array",
                            "minItems": 1,
                            "maxItems": 5,
                            "items": [{
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32
                            }]
                        },
                        "interfaces": {
                            "type": "array",
                            "minItems": 1,
                            "items": [{
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 128
                            }]
                        },
                        "ssid": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 32
                        },
                        "broadcast": {
                            "type": "boolean"
                        },
                        "atf_percent": {
                            "type": "integer",
                            "min": 0,
                            "max": 100
                        },
                        "802.11kv": {
                            "type": "boolean"
                        },
                        "802.11r": {
                            "type": "boolean"
                        },
                        "security": {
                            "type": "object",
                            "properties": {
                                "auth_type": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 9
                                },
                                "encryption": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 5
                                },
                                "psk": {
                                    "type": "string",
                                    "minLength": 8,
                                    "maxLength": 63
                                },
                                "wep": {
                                    "type": "object",
                                    "properties": {
                                        "key_format": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 1
                                        },
                                        "default_key": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 1
                                        },
                                        "keys": {
                                            "type": "array",
                                            "minItems": 1,
                                            "maxItems": 5,
                                            "items": [{
                                                "type": "string",
                                                "minLength": 5,
                                                "maxLength": 26
                                            }]
                                        }
                                    },
                                    "required": [
                                        "key_format",
                                        "keys"
                                    ]
                                },
                                "supported_auth_type": {
                                    "type": "array",
                                    "minItems": 1,
                                    "maxItems": 10,
                                    "items": [{
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 9
                                    }]
                                },
                                "supported_encryption": {
                                    "type": "array",
                                    "minItems": 1,
                                    "maxItems": 6,
                                    "items": [{
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 5
                                    }]
                                }
                            },
                            "required": [
                                "auth_type",
                                "encryption",
                                "supported_auth_type",
                                "supported_encryption"
                            ]
                        },
                        "schedule": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean"
                                },
                                "id": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 51
                                }
                            },
                            "required": [
                                "enabled"
                            ]
                        },
                        "default": {
                            "type": "boolean"
                        },
                        "id": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 128
                        }
                    },
                    "required": [
                        "enabled",
                        "radios",
                        "ssid",
                        "broadcast",
                        "security",
                        "id"
                    ]
                }]
            }


### Create SSIDs [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[ssids])

    + Headers

            Authorization: Token e6223a...fb7ad3

    + Schema

            {
                "$schema": "http://json-schema.org/draft/2020-12/schema",
                "type": "array",
                "items": [{
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean"
                        },
                        "radios": {
                            "type": "array",
                            "minItems": 1,
                            "maxItems": 5,
                            "items": [{
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 32
                            }]
                        },
                        "ssid": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 32
                        },
                        "broadcast": {
                            "type": "boolean"
                        },
                        "atf_percent": {
                            "type": "integer",
                            "min": 0,
                            "max": 100
                        },
                        "802.11kv": {
                            "type": "boolean"
                        },
                        "802.11r": {
                            "type": "boolean"
                        },
                        "security": {
                            "type": "object",
                            "properties": {
                                "auth_type": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 9
                                },
                                "encryption": {
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 5
                                },
                                "psk": {
                                    "type": "string",
                                    "minLength": 8,
                                    "maxLength": 63
                                },
                                "wep": {
                                    "type": "object",
                                    "properties": {
                                        "key_format": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 1
                                        },
                                        "default_key": {
                                            "type": "integer",
                                            "minimum": 0,
                                            "maximum": 1
                                        },
                                        "keys": {
                                            "type": "array",
                                            "minItems": 1,
                                            "maxItems": 5,
                                            "items": [{
                                                "type": "string",
                                                "minLength": 5,
                                                "maxLength": 26
                                            }]
                                        }
                                    },
                                    "required": [
                                        "key_format",
                                        "keys"
                                    ]
                                }
                            },
                            "required": [
                                "auth_type",
                                "encryption"
                            ]
                        },
                        "schedule": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean"
                                },
                                "id": {
                                    "type": "string",
                                    "minLength": 1,
                                    "maxLength": 51
                                }
                            },
                            "required": [
                                "enabled"
                            ]
                        }
                    },
                    "required": [
                        "radios",
                        "ssid"
                    ]
                }]
            }

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: cfg01 (string)

    + Schema
            {
                "$schema": "http://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 51
                    }
                }
            }

### Delete all SSIDs [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## ssids acls [/interfaces/wifi/ssids/acls]
Global Access Control Lists. Operating on these endpoints will affect individual
SSID ACL.

+ Attributes (array)
    + (object)
        + `ssid`: Guest (string) - SSID name.
        + `acl` (WiFi ACL Base)
            + `entries`: (array[WiFi ACL Entry])

### Retrieve all ACLs [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (object)
            + `id`: Guest (string)
            + `ssid`: Guest (string) - SSID name.
            + `acl` (WiFi ACL Base)
                + `entries`: (array)
                    + (WiFi ACL Entry)
                        + `id`: 00:1A:3F:00:6E:CF (string)

### Create ACL to all SSIDs [POST]
+ Request (application/json)
    + Attributes (WiFi ACL Base)
        + `entries`: (array[WiFi ACL Entry])
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete all ACLs [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## ssids acls entries [/interfaces/wifi/ssids/acls/entries]
+ Attributes (array[WiFi ACL Entry])

### Insert to all ACLs [POST]
+ Request (application/json)
    + Attributes (ssids acls entries)
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete all ACLs from all SSIDs [DELETE]
+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## ssids vlan [/interfaces/wifi/ssids/vlans]
+ Attributes (object)
    + `ssids`: ssid1, ssid2 (array[string], required) - List of SSID IDs that will use this VLAN ID.
    + `enabled`: true (boolean)
    + `vlan_id`: 100 (number, required)

### Retrieve all SSIDs VLANs [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (ssids vlan)
            + `id`: 100 (number, required)

    + Schema

        {
            "$schema": "http://json-schema.org/draft/2020-12/schema",
            "type": "array",
            "items": [{
                "type": "object",
                "properties": {
                    "ssids": {
                        "type": "array",
                        "minItems": 1,
                        "items": [{
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 32
                        }]
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "vlan_id": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 4094
                    },
                    "id": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 4094
                    },
                },
                "required": [
                    "ssids",
                    "enabled",
                    "vlan_id"
                ]
            }]
        }

### Create SSIDs VLANs [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[ssids vlan])

    + Headers

            Authorization: Token e6223a...fb7ad3

    + Schema

        {
            "$schema": "http://json-schema.org/draft/2020-12/schema",
            "type": "array",
            "items": [{
                "type": "object",
                "properties": {
                    "ssids": {
                        "type": "array",
                        "minItems": 1,
                        "items": [{
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 32
                        }]
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "vlan_id": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 4094
                    },
                },
                "required": [
                    "ssids",
                    "vlan_id"
                ]
            }]
        }

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: 100 (number)

    + Schema
            {
                "$schema": "http://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 4094
                    }
                }
            }

### Delete all SSIDs VLANs [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## ssid [/interfaces/wifi/ssids/{id}]
+ Parameters
    + `id` (string) - The ID of the desired SSID.

### Retrieve SSID settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (ssids)
        + `interfaces`: wlan0 (array[string]) - Interface which is being used by this SSID.
        + `default`: false (boolean) - When true, indicates that this object cannot be deleted.
        + `security` (SSID Security Base)
            + `supported_auth_type`: (array[number]) - List of supported auth_types
                + 0
                + 3
                + 5
            + `supported_encryption`: (array[number]) - List of supported encryptions
                + 0
                + 1

    + Schema

            {
                "$schema": "http://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "radios": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 5,
                        "items": [{
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 32
                        }]
                    },
                    "interfaces": {
                        "type": "array",
                        "minItems": 1,
                        "items": [{
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 128
                        }]
                    },
                    "ssid": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    },
                    "broadcast": {
                        "type": "boolean"
                    },
                    "atf_percent": {
                        "type": "integer",
                        "min": 0,
                        "max": 100
                    },
                    "802.11kv": {
                        "type": "boolean"
                    },
                    "802.11r": {
                        "type": "boolean"
                    },
                    "security": {
                        "type": "object",
                        "properties": {
                            "auth_type": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 9
                            },
                            "encryption": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 5
                            },
                            "psk": {
                                "type": "string",
                                "minLength": 8,
                                "maxLength": 63
                            },
                            "wep": {
                                "type": "object",
                                "properties": {
                                    "key_format": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 1
                                    },
                                    "default_key": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 1
                                    },
                                    "keys": {
                                        "type": "array",
                                        "minItems": 1,
                                        "maxItems": 5,
                                        "items": [{
                                            "type": "string",
                                            "minLength": 5,
                                            "maxLength": 26
                                        }]
                                    }
                                },
                                "required": [
                                    "key_format",
                                    "keys"
                                ]
                            },
                            "supported_auth_type": {
                                "type": "array",
                                "minItems": 1,
                                "maxItems": 10,
                                "items": [{
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 9
                                }]
                            },
                            "supported_encryption": {
                                "type": "array",
                                "minItems": 1,
                                "maxItems": 6,
                                "items": [{
                                    "type": "integer",
                                    "minimum": 0,
                                    "maximum": 5
                                }]
                            }
                        },
                        "required": [
                            "auth_type",
                            "encryption",
                            "supported_auth_type",
                            "supported_encryption"
                        ]
                    },
                    "schedule": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "boolean"
                            },
                            "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 51
                            }
                        },
                        "required": [
                            "enabled"
                        ]
                    },
                    "default": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "enabled",
                    "radios",
                    "ssid",
                    "broadcast",
                    "security",
                ]
            }

### Update SSID settings [PUT]
+ Attributes (ssids)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

    + Schema

            {
                "$schema": "http://json-schema.org/draft/2020-12/schema",
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "radios": {
                        "type": "array",
                        "minItems": 1,
                        "maxItems": 5,
                        "items": [{
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 32
                        }]
                    },
                    "ssid": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    },
                    "broadcast": {
                        "type": "boolean"
                    },
                    "atf_percent": {
                        "type": "integer",
                        "min": 0,
                        "max": 100
                    },
                    "802.11kv": {
                        "type": "boolean"
                    },
                    "802.11r": {
                        "type": "boolean"
                    },
                    "security": {
                        "type": "object",
                        "properties": {
                            "auth_type": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 9
                            },
                            "encryption": {
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 5
                            },
                            "psk": {
                                "type": "string",
                                "minLength": 8,
                                "maxLength": 63
                            },
                            "wep": {
                                "type": "object",
                                "properties": {
                                    "key_format": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 1
                                    },
                                    "default_key": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "maximum": 1
                                    },
                                    "keys": {
                                        "type": "array",
                                        "minItems": 1,
                                        "maxItems": 5,
                                        "items": [{
                                            "type": "string",
                                            "minLength": 5,
                                            "maxLength": 26
                                        }]
                                    }
                                }
                            }
                        }
                    },
                    "schedule": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "boolean"
                            },
                            "id": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 51
                            }
                        }
                    }
                }
            }

+ Response 204

### Delete SSID [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## ssid counters [/interfaces/wifi/ssids/{id}/counters]
+ Parameters
    + `id` (string) - The ID of the desired SSID.

### Retrieve all SSID counters [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (Counters Base)

## ssid stats [/interfaces/wifi/ssids/{id}/stats]
+ Parameters
    + `id` (string) - The ID of the desired SSID.

### Retrieve all SSID statistics [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (Stats Base)

## ssid nodes [/interfaces/wifi/ssids/{id}/nodes]
+ Parameters
    + `id` (string) - The ID of the desired SSID.

### Retrieve SSID's clients [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array[WiFi Nodes Base])

    + Schema
            {
            "$schema": "http://json-schema.org/draft/2020-12/schema",
            "type": "object",
            "properties": {
                "mac": {
                "type": "string",
                "minLength": 17,
                "maxLength": 17
                },
                "signal": {
                "type": "integer",
                "minimum": -100,
                "maximum": -1
                },
                "uptime": {
                "type": "integer",
                "minimum": 0,
                "maximum": 4294967295
                },
                "idle": {
                "type": "integer",
                "minimum": 0,
                "maximum": 4294967295
                },
                "tx_rate": {
                "type": "integer",
                "minimum": 0,
                "maximum": 4294967295
                },
                "rx_rate": {
                "type": "integer",
                "minimum": 0,
                "maximum": 4294967295
                },
                "phy_mode": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
                },
                "hostname": {
                "type": "string",
                "minLength": 0,
                "maxLength": 253
                },
                "description": {
                "type": "string",
                "minLength": 0,
                "maxLength": 64
                },
                "rx_packets": {
                "type": "integer",
                "minimum": 0,
                "maximum": 4294967295
                },
                "rx_bytes": {
                "type": "integer",
                "minimum": 0,
                "maximum": 4294967295
                },
                "tx_packets": {
                "type": "integer",
                "minimum": 0,
                "maximum": 4294967295
                },
                "tx_bytes": {
                "type": "integer",
                "minimum": 0,
                "maximum": 4294967295
                },
                "ip_addresses": {
                "type": "array",
                "minItems": 0,
                "maxItems": 5,
                "items": [
                    {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 15
                    }
                ]
                },
                "ip_mode": {
                "type": "integer",
                "minimum": 0,
                "maximum": 2
                },
                "ssid": {
                "type": "string",
                "minLength": 1,
                "maxLength": 32
                }
            },
            "required": [
                "mac",
                "signal",
                "tx_rate",
                "rx_rate",
                "ssid"
            ]
            }

## ssid acl [/interfaces/wifi/ssids/{id}/acl]
+ Parameters
    + `id` (string) - The ID of the desired SSID.

+ Attributes (WiFi ACL Base)
    + `entries`: (array[WiFi ACL Entry])

### Retrieve ACL [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (WiFi ACL Base)
        + `entries`: (array)
            + (WiFi ACL Entry)
                + `id`: 00:1A:3F:00:6E:CF (string)

### Update ACL [PUT]
+ Request (application/json)
    + Attributes (WiFi ACL Base)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete ACL [DELETE]
+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## ssid acl entries [/interfaces/wifi/ssids/{id}/acl/entries]
+ Parameters
    + `id` (string) - The ID of the desired SSID.

+ Attributes (array[WiFi ACL Entry])

### Retrieve all entries [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (WiFi ACL Entry)
            + `id`: 00:1A:3F:00:6E:CF (string)

### Insert [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (ssid acl entries)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 200 (application/json)
    + Attributes (object)
        + `id`: 00:1A:3F:00:6E:CF (string)

### Delete all entries [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## ssid acl entry [/interfaces/wifi/ssids/{id}/acl/entries/{entry_id}]
+ Parameters
    + `id`       (string) - The ID of the desired SSID.
    + `entry_id` (string) - The ID of the desired entry.

+ Attributes (WiFi ACL Entry)

### Retrieve [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (ssid acl entry)

### Update [PUT]
+ Request (application/json)
    + Attributes (ssid acl entry)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete entry [DELETE]
+ Request ()
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## ssid vlan [/interfaces/wifi/ssids/vlans/{id}]
+ Attributes (ssids vlan)

### Retrieve SSID VLAN setting [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (ssids vlan)

    + Schema

        {
            "$schema": "http://json-schema.org/draft/2020-12/schema",
            "type": "object",
            "properties": {
                "ssids": {
                    "type": "array",
                    "minItems": 1,
                    "items": [{
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    }]
                },
                "enabled": {
                    "type": "boolean"
                },
                "vlan_id": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 4094
                },
            },
            "required": [
                "ssids",
                "vlan_id"
            ]
        }

### Update SSIDs VLANs settings [PUT]

+ Request (application/json)
    + Attributes (ssids vlan)

    + Headers

            Authorization: Token e6223a...fb7ad3

    + Schema
        {
            "$schema": "http://json-schema.org/draft/2020-12/schema",
            "type": "object",
            "properties": {
                "ssids": {
                    "type": "array",
                    "minItems": 1,
                    "items": [{
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 32
                    }]
                },
                "enabled": {
                    "type": "boolean"
                },
                "vlan_id": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 4094
                }
            }
        }

+ Response 204

### Delete SSID VLAN [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Interfaces WiFi Radios

## radios [/interfaces/wifi/radios]
+ Attributes (Radio Base)
    + `channel` (Radio Channels Base)

### Retrieve all radios [GET]
<a name="wifi_modes"></a>
**supported_modes** [bitmap](#bitmap):
- AP mode:         bit0 (weight = 1)
- Client mode:     bit1 (weight = 2)
- Repeater mode:   bit2 (weight = 4)
- Manegement mode: bit3 (weight = 8)

<a name="wifi_phy_modes"></a>
**supported_phy_modes** (802.11) [bitmap](#bitmap):
- b:  bit0 (weight = 1)
- g:  bit1 (weight = 2)
- a:  bit2 (weight = 4)
- n:  bit3 (weight = 8)
- ac: bit4 (weight = 16)

+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (Radio Base)
            + `supported_bands`: (array) - List bands supporteds by the radio.
                + 2.4 (number)
                + 5   (number)
            + `id`: radio0                    (string)
            + `min_tx_power`: 6               (number) - Minimum transmission power supported by this radio.
            + `max_tx_power`: 17              (number) - Maximum transmission power supported by this radio.
            + `max_distance`: 30000           (number) - Maximum link distance value (meters).
            + `support_auto_distance`: false  (boolean) - Indicates if link automatic distance is supported.
            + `distance`: 300                 (number) - Link distance (meters).
            + `max_ssids`: 8                  (number) - Maximum of SSIDs this radio supports.
            + `supported_modes`: 7            (number) - [Bitmap](#bitmap) of supported [wireless modes](#wifi_modes).
            + `supported_phy_modes`: 1,2,3,11 (array[number]) - array of supported [PHY modes](#wifi_phy_modes).
            + `channel` (Radio Channels Base)
                + `current`: 1 (number) - Current channel number.
    + Schema
        {
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "array",
            "minItems": 1,
            "maxItems": 5,
            "items": [
                {
                "type": "object",
                "properties": {
                    "enabled": {
                    "type": "boolean"
                    },
                    "mode": {
                    "enum": [1, 2, 4, 8]
                    },
                    "tx_power": {
                    "type": "integer",
                    "minimum": 1
                    },
                    "atf_mode": {
                    "enum": [0, 1, 2]
                    },
                    "country": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 2
                    },
                    "band": {
                    "type": "number",
                    "minimum": 2,
                    "maximum": 6
                    },
                    "management": {
                    "type": "boolean"
                    },
                    "mu_mimo": {
                    "type": "boolean"
                    },
                    "beamforming": {
                    "type": "boolean"
                    },
                    "phy_mode": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 31
                    },
                    "supported_bands": {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 3,
                    "items": [
                        {
                        "type": "number",
                        "minimum": 1,
                        "maximum": 6
                        }
                    ]
                    },
                    "id": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 32
                    },
                    "min_tx_power": {
                    "type": "integer",
                    "minimum": 1
                    },
                    "max_tx_power": {
                    "type": "integer",
                    "minimum": 1
                    },
                    "max_distance": {
                    "type": "integer",
                    "minimum": 300,
                    "maximum": 100000
                    },
                    "support_auto_distance": {
                    "type": "boolean"
                    },
                    "distance": {
                    "type": "integer",
                    "minimum": 300,
                    "maximum": 100000
                    },
                    "max_ssids": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 8
                    },
                    "supported_modes": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 15
                    },
                    "supported_phy_modes": {
                    "type": "array",
                    "minItems": 1,
                    "maxItems": 6,
                    "items": [
                        {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 31
                        }
                    ]
                    },
                    "channel": {
                    "type": "object",
                    "properties": {
                        "list": {
                        "type": "array",
                        "items": [
                            {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 200
                            }
                        ]
                        },
                        "extension": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 2
                        },
                        "bandwidth": {
                        "type": "object",
                        "properties": {
                            "value": {
                            "enum": [0, 5, 10, 20, 40, 80, 160]
                            },
                            "fixed": {
                            "type": "boolean"
                            }
                        },
                        "required": [
                            "value",
                            "fixed"
                        ]
                        },
                        "current": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 200
                        }
                    },
                    "required": [
                        "list",
                        "extension",
                        "bandwidth",
                        "current"
                    ]
                    }
                },
                "required": [
                    "enabled",
                    "mode",
                    "tx_power",
                    "country",
                    "band",
                    "phy_mode",
                    "supported_bands",
                    "id",
                    "min_tx_power",
                    "max_tx_power",
                    "max_ssids",
                    "supported_modes",
                    "supported_phy_modes",
                    "channel"
                ]
                }
            ]
        }

## radio nodes [/interfaces/wifi/radios/{id}/nodes]
+ Parameters
    + `id` (string) - The ID of the desired radio.

### Retrieve radio's clients [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (WiFi Nodes Base)
            + `ssid`: Guest (string, required)

## countries [/interfaces/wifi/radios/{id}/countries]
<a name="countries"></a>
+ Parameters
    + `id` (string) - The ID of the desired radio.

### Retrieve all countries [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array[string])
        + Members
            + `BR`
            + `AR`

## channels [/interfaces/wifi/radios/{id}/channels{?country,mode}]
+ Parameters
    + `id` (string) - The ID of the desired radio.
    + `country` (string, optional) - Two letter [ISO country code](#countries).
    + `mode` (number, optional) - [Wireless mode](#wifi_modes).

+ Attributes
    + `channel`: 1                   (number) - Channel number.
    + `frequency`: 5180              (number) - Frequency number in MHz.
    + `extensions`: 2                (array[number]) - List of allowed extensions (0=Auto, 1=Below, 2=Above).
    + `dfs`: false                   (boolean) - Indicates whether channel uses DFS (Dynamic Frequency Selection) to avoid radar interference.
    + `active`: true                 (boolean) - Indicates whether channel can be used.
    + `min_tx_power`: 6              (number) - Minimum transmission power of the current channel.
    + `max_tx_power`: 17             (number) - Maximum transmission power of the current channel.
    + `max_distance`: 30000          (number) - Maximum link distance value (meters).
    + `support_auto_distance`: false (boolean) - Indicates if link automatic distance is supported.
    + `distance`: 300                (number) - Link distance (meters).
    + `max_eirp`: 20                 (number) - Maximum effective isotropic radiated power of the current channel.
    + `no_outdoor`: true             (boolean) - Indicates whether channel is for indoor usage only.
    + `bandwidths`: 20,40            (array[number]) - List containing the supported bandwidths of the current channel.

### Retrieve all channels [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array[channels])

## tx_powers [/interfaces/wifi/radios/{id}/tx_powers]
+ Parameters
    + `id` (string) - The ID of the desired radio.

+ Attributes
    + `dbm`: 20 (number)
    + `mw`: 100 (number)

### Retrieve all tx powers [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array[tx_powers])

## datarates [/interfaces/wifi/radios/{id}/datarates]
+ Parameters
    + `id` (string) - The ID of the desired radio.

### Retrieve all datarates [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array[number])
        + Members
            + `8`
            + `9`
            + `10`
            + `11`
            + `12`
            + `13`
            + `14`
            + `15`

## radio brief [/interfaces/wifi/radios/{id}/brief]
+ Parameters
    + `id` (string) - The ID of the desired radio.

### GET
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `channel`: 36 (number)
        + `nodes`: 30   (number) - Number of associated clients.
        + `ssids_num`: 4 (number) - Number of SSIDs configured in the radio.

## radio [/interfaces/wifi/radios/{id}]
+ Parameters
    + `id` (string) - The ID of the desired radio.

### Retrieve radio settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (Radio Base)
        + `supported_bands`: (array) - List bands supporteds by the radio.
            + 2.4 (number)
            + 5   (number)
        + `min_tx_power`: 6               (number) - Minimum transmission power supported by this radio.
        + `max_tx_power`: 17              (number) - Maximum transmission power supported by this radio.
        + `max_distance`: 30000           (number) - Maximum link distance value (meters).
        + `support_auto_distance`: false  (boolean) - Indicates if link automatic distance is supported.
        + `distance`: 300                 (number) - Link distance (meters).
        + `max_ssids`: 8                  (number) - Maximum of SSIDs this radio supports.
        + `supported_modes`: 7            (number) - [Bitmap](#bitmap) of supported [wireless modes](#wifi_modes).
        + `supported_phy_modes`: 1,2,3,11 (array[number]) - array of supported [PHY modes](#wifi_phy_modes).
        + `channel` (Radio Channels Base)
            + `current`: 36 (number) - Current channel number.

    + Schema
            {
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "properties": {
                "enabled": {
                "type": "boolean"
                },
                "mode": {
                "enum": [
                    1,
                    2,
                    4,
                    8
                ]
                },
                "tx_power": {
                "type": "integer",
                "minimum": 1
                },
                "atf_mode": {
                "enum": [
                    0,
                    1,
                    2
                ]
                },
                "country": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2
                },
                "band": {
                "type": "number",
                "minimum": 2,
                "maximum": 6
                },
                "management": {
                "type": "boolean"
                },
                "mu_mimo": {
                "type": "boolean"
                },
                "beamforming": {
                "type": "boolean"
                },
                "phy_mode": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
                },
                "supported_bands": {
                "type": "array",
                "minItems": 1,
                "maxItems": 3,
                "items": [
                    {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 6
                    }
                ]
                },
                "id": {
                "type": "string",
                "minLength": 1,
                "maxLength": 32
                },
                "min_tx_power": {
                "type": "integer",
                "minimum": 1
                },
                "max_tx_power": {
                "type": "integer",
                "minimum": 1
                },
                "max_distance": {
                "type": "integer",
                "minimum": 300,
                "maximum": 100000
                },
                "support_auto_distance": {
                "type": "boolean"
                },
                "distance": {
                "type": "integer",
                "minimum": 300,
                "maximum": 100000
                },
                "max_ssids": {
                "type": "integer",
                "minimum": 1,
                "maximum": 8
                },
                "supported_modes": {
                "type": "integer",
                "minimum": 1,
                "maximum": 15
                },
                "supported_phy_modes": {
                "type": "array",
                "minItems": 1,
                "maxItems": 6,
                "items": [
                    {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 31
                    }
                ]
                },
                "channel": {
                "type": "object",
                "properties": {
                    "list": {
                    "type": "array",
                    "items": [
                        {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 200
                        }
                    ]
                    },
                    "extension": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2
                    },
                    "bandwidth": {
                    "type": "object",
                    "properties": {
                        "value": {
                        "enum": [
                            0,
                            5,
                            10,
                            20,
                            40,
                            80,
                            160
                        ]
                        },
                        "fixed": {
                        "type": "boolean"
                        }
                    },
                    "required": [
                        "value",
                        "fixed"
                    ]
                    },
                    "current": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 200
                    }
                },
                "required": [
                    "list",
                    "extension",
                    "bandwidth",
                    "current"
                ]
                }
            },
            "required": [
                "enabled",
                "mode",
                "tx_power",
                "country",
                "band",
                "phy_mode",
                "supported_bands",
                "min_tx_power",
                "max_tx_power",
                "max_ssids",
                "supported_modes",
                "supported_phy_modes",
                "channel"
            ]
            }

### Update radio settings [PUT]
+ Attributes (radios)
    + `distance`: 300                (number) - Link distance (meters).

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

    + Schema
            {
            "$schema": "http://json-schema.org/draft-07/schema",
            "type": "object",
            "properties": {
                "enabled": {
                "type": "boolean"
                },
                "mode": {
                "enum": [
                    1,
                    2,
                    4,
                    8
                ]
                },
                "tx_power": {
                "type": "integer",
                "minimum": 1
                },
                "atf_mode": {
                "enum": [
                    0,
                    1,
                    2
                ]
                },
                "country": {
                "type": "string",
                "minLength": 2,
                "maxLength": 2
                },
                "band": {
                "type": "number",
                "minimum": 2,
                "maximum": 6
                },
                "management": {
                "type": "boolean"
                },
                "mu_mimo": {
                "type": "boolean"
                },
                "beamforming": {
                "type": "boolean"
                },
                "phy_mode": {
                "type": "integer",
                "minimum": 1,
                "maximum": 31
                },
                "distance": {
                "type": "integer",
                "minimum": 300,
                "maximum": 100000
                },
                "channel": {
                "type": "object",
                "properties": {
                    "list": {
                    "type": "array",
                    "items": [
                        {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 200
                        }
                    ]
                    },
                    "extension": {
                    "type": "integer",
                    "minimum": 0,
                    "maximum": 2
                    },
                    "bandwidth": {
                    "type": "object",
                    "properties": {
                        "value": {
                        "enum": [
                            0,
                            5,
                            10,
                            20,
                            40,
                            80,
                            160
                        ]
                        },
                        "fixed": {
                        "type": "boolean"
                        }
                    }
                    }
                }
                }
            }
            }

+ Response 204

## radio counters [/interfaces/wifi/radios/{id}/counters]
+ Parameters
    + `id` (string) - The ID of the desired radio.

### Retrieve radio counters [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (Counters Base)

## radio stats [/interfaces/wifi/radios/{id}/stats]
+ Parameters
    + `id` (string) - The ID of the desired radio.

### Retrieve radio statistics [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (Stats Base)

## radio link [/interfaces/wifi/radios/{id}/link]
+ Parameters
    + `id` (string) - The ID of the desired radio.

### Retrieve radio link information [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `signal`: `-45`                 (number, required) - Signal strenght `(dBm)`.
        + `remote_mac`: 00:1A:3F:4C:5C:6D (string, required)
        + `snr`: 30                       (number) - SNR (Signal to Noise Ratio).
        + `noise`: `-95`                  (number) - Noise floor.
        + `tx_rate`: 120000               (number) - Tx rate in Kbits per second.
        + `rx_rate`: 120000               (number) - Rx rate in Kbits per second.
        + `phy_mode`: 0                   (number) - [PHY mode](#wifi_phy_modes).
        + `uptime`: 0                     (number)
        + `authenticated`: true           (boolean)

## radio signal LEDs [/interfaces/wifi/radios/{id}/link/leds]
Some devices supports LEDs that refers to signal strenght. Each available LED
will have a correspondent **level** threshold to be configured.

+ Attributes (object)
    + `level_1`: `-80` (number, required) - Signal threshold `(Dbm)`.
    + `level_2`: `-70` (number)
    + `level_3`: `-60` (number)

+ Parameters
    + `id` (string) - The ID of the desired radio.

### Retrieve radio signal LEDs settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (radio signal LEDs)
        + `levels`: 3 (number, required) - Available signal LEDs.

### Update radio signal LEDs settings [PUT]
+ Attributes (radio signal LEDs)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## radio actions [/interfaces/wifi/radios/{id}/actions]
+ Attributes (object)
    + `type`: disconnect (enum[string], required)
        + Members
            + `disconnect` - Disconnect associated stations `(clients)`
            + `survey` - Site survey

+ Parameters
    + `id` (string) - The ID of the desired radio.

### POST [POST]
+ Request disconnect (application/json)
    + Attributes (object)
        + `type`: disconnect (string)
        + `data` (object, required)
            + `macs`: 00:1A:3F:9E:6E:CF (array[string], required) - MAC addresses disconnect.

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

+ Request survey (application/json)
    + Attributes (object)
        + `type`: survey (string)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (object)
            + `ssid`: My SSID     (string, required)
            + `channel`           (object, required)
                + `number`: 1     (number, required)
                + `bandwidth`: 40 (number)
                + `extension`: 2  (enum[number])
                    + Members
                        + `1` - Below
                        + `2` - Above
            + `bssid`: 00:1A:3F:9E:6E:00 (string, required)
            + `signal`: `-60`            (number) - Signal strenght `(dBm)`.
            + `phy_mode`: 0              (number) - [PHY mode](#wifi_phy_modes).

# Group Interfaces Ethernets

## ethernets [/interfaces/ethernets]
+ Attributes (object)
    + `enabled`: true (boolean)
    + `speed`: 100    (number)
    + `mtu`: 1500     (number)
    + `duplex`: 1     (enum[number])
        + Members
            + `0` - Half
            + `1` - Full
    + `auto_negotiate`: true   (boolean)
    + `capabilities`: 31       (number) - Ethernet [capabilities](#eth_capabilities) [Bitmap](#bitmap).
    + `mac`: 00:1A:3F:00:6E:20 (string)
    + `default_mac`: 00:1A:3F:00:6E:20 (string) - Device default mac address

### Retrieve all ethernets [GET]
<a name="eth_capabilities"></a>
**capabilities** [bitmap](#bitmap):
- 10H:  bit0 (weight = 1)
- 10F:  bit1 (weight = 2)
- 100H: bit2 (weight = 4)
- 100F: bit3 (weight = 8)
- 1000: bit4 (weight = 16)

+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (ethernets)
            + `id`: eth0                   (string)
            + `supported_capabilities`: 31 (number) - Ethernet [capabilities](#eth_capabilities) [Bitmap](#bitmap).

## ethernet [/interfaces/ethernets/{id}]
+ Parameters
    + `id` (string) - The ID of the desired ethernet.

### Retrieve ethernet settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (ethernets)
        + `id`: eth0 (string)
        + `supported_capabilities`: 31 (number) - Ethernet [capabilities](#eth_capabilities) [Bitmap](#bitmap).
        + `default_mac`: true (boolean) - default_mac informs you if the configured mac is the default or not.

### Update ethernet settings [PUT]
+ Attributes (ethernets)
    + `default_mac`: true (boolean) - default_mac TRUE changes to default mac address.
+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## status [/interfaces/ethernets/status]
+ Attributes (object)
    + `link`: true             (boolean)
    + `speed`: 100             (number)
    + `duplex`: 1              (enum[number])
        + Members
            + `0` - Half
            + `1` - Full
    + `mac`: 00:1A:3F:00:6E:20 (string)
    + `sfp` (object)
        + `signal`: `-30`   (number) - Signal strength `(dBm)`.
        + `temperature`: 50 (number) - temperature `(degrees Celsius)`.

### Retrieve all ethernets status [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (status)
            + `id`: eth0 (string)

## ethernet status [/interfaces/ethernets/{id}/status]
+ Parameters
    + `id` (string) - The ID of the desired ethernet.

### Retrieve ethernet status [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (status)

## counters [/interfaces/ethernets/counters]

### Retrieve all ethernets counters [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (Counters Base)

## ethernet counters [/interfaces/ethernets/{id}/counters]
+ Parameters
    + `id` (string) - The ID of the desired ethernet.

### Retrieve ethernet counters [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (Counters Base)

## stats [/interfaces/ethernets/stats]

### Retrieve all ethernets statistics [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (Stats Base)

## ethernet stats [/interfaces/ethernets/{id}/stats]
+ Parameters
    + `id` (string) - The ID of the desired ethernet.

### Retrieve ethernet statistics [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (Stats Base)

# Group Interfaces PONs

## counters [/interfaces/pons/counters]

### Retrieve all PONs counters [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (PON Counters Base)

## stats [/interfaces/pons/stats]

### Retrieve all PONs statistics [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (Stats Base)

## nodes [/interfaces/pons/nodes]

### Retrieve nodes from all PONs [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array[PON Nodes Base])

## pons [/interfaces/pons]
+ Attributes (object)

### Retrieve all PONs [GET]
<a name="olt_vendor_profile"></a>
**Supported Vendor Profiles**:
- `0` - Custom
- `1` - Intelbras
- `2` - Huawei
- `3` - ZTE

+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (PON Base)
            + `id`: pon0 (string)
            + `security` (PON Security)

## pon [/interfaces/pons/{id}]
+ Parameters
    + `id` (string) - The ID of the desired pon.

### Retrieve pon settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (PON Base)
        + `security` (PON Security)

### Update pon settings [PUT]
+ Attributes (object)
    + `mode`: auto                          (string) - auto/epon/gpon/xgpon/xgspon
    + `omci`                                (object)
        + `model_id`: 121W                  (string)
        + `vendor_id`: ITBS                 (string)
        + `olt_profile`: 1                  (enum[number]) - Enum of [OLT Vendor Profile](#olt_vendor_profile).
    + `oam`                                 (object)
        + `model_id`: 121W                  (string)
    + `security` (PON Security)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## pon counters [/interfaces/pons/{id}/counters]
+ Parameters
    + `id` (string) - The ID of the desired pon.

### Retrieve pon counters [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (PON Counters Base)

## pon stats [/interfaces/pons/{id}/stats]
+ Parameters
    + `id` (string) - The ID of the desired pon.

### Retrieve pon statistics [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (Stats Base)

## pon status [/interfaces/pons/{id}/status]
+ Parameters
    + `id` (string) - The ID of the desired pon.

### Retrieve pon status [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (PON Status Base)

## pon nodes [/interfaces/pons/{id}/nodes]
+ Parameters
    + `id` (string) - The ID of the desired pon.

### Retrieve nodes [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array[PON Nodes Base])

## pon node [/interfaces/pons/{id}/nodes/{node_id}]
+ Parameters
    + `id` (string) - The ID of the desired pon.

### Retrieve pon node [GET]
<a name="provisioning_states"></a>
**Supported provisioning states**:
- `1` - Inital
- `2` - Standby
- `3` - Serial Number
- `4` - Ranging
- `5` - Operation
- `6` - Popup
- `7` - Emergency Stop

+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array[PON Node Base])

## pon actions [/interfaces/pons/{id}/actions]
+ Parameters
    + `id` (string) - The ID of the desired pon.

+ Attributes (object)
    + `async`: true (boolean)
    + `type`: discover (enum[string], required)
        + Members
            + `discover` - Discover nodes

### POST [POST]
+ Request discover (application/json)
    + Attributes (object)
        + `type`: discover (string)
        + `async`: false (boolean)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (object)
            + `signal`: `-60` (number) - Signal strenght `(dBm)`.

## pon slots [/interfaces/pons/{id}/slots]
+ Parameters
    + `id` (string) - The ID of the desired pon.

### Retrieve all slots [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `id`: slot0 (string)

## pon slot [/interfaces/pons/{id}/slots/{slot_id}]
+ Parameters
    + `id` (string) - The ID of the desired pon.

### Retrieve pon slot [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (PON Slot Base)

### Update pon slot [PUT]
+ Attributes (PON Slot Base)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## pon slot counters [/interfaces/pons/{id}/slots/{slot_id}/counters]
+ Parameters
    + `id`      (string) - The ID of the desired pon.
    + `slot_id` (string) - The ID of the desired pon slot.

### Retrieve pon slot counters [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (PON Counters Base)

## pon slot vlans [/interfaces/pons/{id}/slots/{slot_id}/vlans]
+ Attributes (VLAN Base)

+ Parameters
    + `id`      (string) - The ID of the desired pon.
    + `slot_id` (string) - The ID of the desired pon slot.

### Retrieve pon slot vlans [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array[pon slot vlans])

### Create pon slot vlans [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[pon slot vlans])

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: 100 (number)

### Delete all pon slot vlans [DELETE]
+ Request ()
    + Attributes (object)
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## pon slot lans [/interfaces/pons/{id}/slots/{slot_id}/lans]
+ Attributes (LAN Base)

+ Parameters
    + `id`      (string) - The ID of the desired pon.
    + `slot_id` (string) - The ID of the desired pon slot.

### Retrieve pon slot lans [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (pon slot lans)
            + `default`: false (boolean) - When true, indicates that this object cannot be deleted.

### Create pon slot lans [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[pon slot lans])

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: br0 (string)

### Delete all pon slot lans [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Services QoS Bandwidth Groups

## bandwidth groups [/services/qos/bandwidth_groups]
+ Attributes (object)
    + `enabled`: false (boolean, required)
    + `uplink` (object)
        + `interfaces`: eth1 (array[string], required)
        + `max_speed`: 100   (number, required) - Maximum speed `(Mbps)`.
    + `downlink` (object)
        + `interfaces`: eth0,wlan0 (array[string], required)
        + `max_speed`: 100         (number, required) - Maximum speed `(Mbps)`.

### Retrieve bandwidth groups [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (bandwidth groups)
            + `id`: bw0 (string)

### Create bandwidth groups [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[bandwidth groups])

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: bw0 (string)

### Delete all bandwidth groups [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## bandwidth group [/services/qos/bandwidth_groups/{id}]
+ Parameters
    + `id` (string) - The ID of the desired bandwidth group.

### Retrieve bandwidth group [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (bandwidth groups)

### Update bandwidth group [PUT]
+ Attributes (bandwidth groups)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete bandwidth group [DELETE]
+ Request ()
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## bandwidth group nodes [/services/qos/bandwidth_groups/{id}/nodes]
Each node has the option to control by **interface**, **mac** or **cidr**. You
should fill just one of those options.

If you want to just limit the speed, fill **max_speed** field. To guarantee a
minimum speed to some user/network/interface, fill **min_speed** field. You may
also fill both fields to guarantee and impose a speed limit at the same time.

+ Attributes (object)
    + `enabled`: false                (boolean, required)
    + `interface`: eth0               (string) - Interface to control the bandwidth.
    + `mac`: 00:1A:3F:00:6E:CF        (string) - MAC address to control the bandwidth.
    + `cidr`: 192.168.0.2/32          (string) - IP address to control the bandwidth.
    + `description`: John Wick Mobile (string)
    + `uplink` (object)
        + `min_speed`: 1   (number) - Minimum speed `(Mbps)`.
        + `max_speed`: 100 (number) - Maximum speed `(Mbps)`.
    + `downlink` (object)
        + `min_speed`: 2   (number) - Minimum speed `(Mbps)`.
        + `max_speed`: 100 (number) - Maximum speed `(Mbps)`.

+ Parameters
    + `id` (string) - The ID of the desired bandwidth group.

### Retrieve bandwidth group nodes [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (bandwidth group nodes)
            + `id`: node0 (string)

### Create nodes [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[bandwidth group nodes])

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: node0 (string)

### Delete all nodes [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## bandwidth group node [/services/qos/bandwidth_groups/{id}/nodes/{node_id}]
+ Parameters
    + `id`      (string) - The ID of the desired bandwidth group.
    + `node_id` (string) - The ID of the desired node.

### Retrieve node [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (bandwidth group nodes)

### Update node [PUT]
+ Attributes (bandwidth group nodes)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete node [DELETE]
+ Request ()
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Services Firewall
<a name="firewall_actions"></a>
**firewall actions**:
- `0`: Accept
- `1`: Deny

<a name="firewall_invert"></a>
**Invert rule `[!]`**:
Use this option when you want to invert the logic of your rule. If you want to
create a rule to deny any IP address, except the one you want to accept, create
a **deny** rule and set **invert** to **true**. As an example `(`using [firewall
advanced ip rule](#firewall_advanced_ip_rules), let's say you want to **deny**
anyone to access HTTP sites, except for the IP address **10.0.0.30**:
<pre><code>
{
    "enabled": true,
    "action": 1,                 # DENY rule
    "description": "Drop HTTP",
    "source": {
        "cidr": 10.0.0.30/32,    # Single IP address
        "invert": true           # Here we invert, since we want to block everyone except the IP above.
    }
    "destination": {
        "port_range": {          # Note that only the port range is needed
            "start": 80,
            "end": 80
        }
    }
}
</code></pre>

## firewall [/services/firewall]
+ Attributes (object)
    + `enabled`: false       (boolean, required)
    + `wan_access_policy`: 0 (enum[number])
        + Members
            + `0` - Allow Internet access
            + `1` - Deny Internet access. Use advanced rules to create a list of IPs/Networks to allow access.
    + `schedule` (object)
        + `enabled`: false (boolean)
        + `id`: sleep      (string) - [Schedule id](#system_schedules).

### Retrieve global settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (firewall)
        + `supported_protocols` (array) - List of available protocol options.
            + (object)
                + `description`: TCP (string)
                + `code`: 6          (number)

### Update global settings [PUT]
+ Attributes (firewall)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## dmz [/services/firewall/dmz]
+ Attributes (object)
    + `enabled`: false                          (boolean, required)
    + `ip4`: 10.0.0.30                          (string) - Internal IP to redirect to.
    + `description`: This is my internal server (string)
    + `schedule` (object)
        + `enabled`: false (boolean)
        + `id`: sleep      (string) - [Schedule id](#system_schedules).

### Retrieve dmz settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (dmz)

### Update dmz settings [PUT]
+ Attributes (dmz)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## port redirect rules [/services/firewall/port_redirects]
+ Attributes (object)
    + `enabled`: false                      (boolean, required)
    + `protocol`: 6                         (number) - Protocol number.
    + `description`: My internal SSH server (string)
    + `source` (object)
        + `ip4`: 0.0.0.0 (string) - External IP.
        + `range` (object) - Port range.
            + `start`: 2200 (number)
            + `end`: 2200   (number)
    + `target` (object)
        + `ip4`: 10.0.0.30 (string) - Internal IP to redirect to.
        + `range` (object) - Port range.
            + `start`: 22 (number)
            + `end`: 22   (number)
    + `schedule` (object)
        + `enabled`: false (boolean)
        + `id`: sleep      (string) - [Schedule id](#system_schedules).

### Retrieve port redirect rules [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (port redirect rules)
            + `id`: port_redirect0 (string)

### Create port redirect rules [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[port redirect rules])

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: port_redirect0 (string)

### Delete all port redirect rules [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## port redirect rule [/services/firewall/port_redirects/{id}]
+ Parameters
    + `id` (string) - The ID of the desired port redirect rule.

### Retrieve port redirect rule [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (port redirect rules)

### Update port redirect rule [PUT]
+ Attributes (port redirect rules)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete port redirect rule [DELETE]
+ Request ()
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## advanced ip rules [/services/firewall/advanced_ip_rules]
<a name="firewall_advanced_ip_rules"></a>
+ Attributes (object)
    + `enabled`: false        (boolean, required)
    + `action`: 1             (number, required) - [Firewall action](#firewall_actions).
    + `protocol`: 6           (number) - Protocol number.
    + `index`: 0              (number) - Index number for ordering the rules.
    + `description`: Drop SSH (string)
    + `source` (object)
        + `cidr`: 10.1.0.0/24 (string)
        + `acl` (object)
            + `enable`: true (boolean)
            + `id`: acl1 (string) - [Firewall Acl id](#firewall_acls).
        + `invert`: false     (boolean) - [Invert rule](#firewall_invert).
        + `port_range` (object)
            + `start`: 0      (number)
            + `end`: 0        (number)
            + `invert`: false (boolean) - [Invert rule](#firewall_invert).
    + `destination` (object)
        + `cidr`: 0.0.0.0/0 (string)
        + `acl` (object)
            + `enable`: true (boolean)
            + `id`: acl1 (string) - [Firewall Acl id](#firewall_acls).
        + `invert`: false     (boolean) - [Invert rule](#firewall_invert).
        + `port_range` (object)
            + `start`: 22     (number)
            + `end`: 22       (number)
            + `invert`: false (boolean) - [Invert rule](#firewall_invert).
    + `schedule` (object)
        + `enabled`: false (boolean)
        + `id`: sleep      (string) - [Schedule id](#system_schedules).

### Retrieve advanced ip rules [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (advanced ip rules)
            + `id`: port_redirect0 (string)

### Create advanced ip rules [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[advanced ip rules])

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: port_redirect0 (string)

### Delete all advanced ip rules [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## advanced ip rule [/services/firewall/advanced_ip_rules/{id}]
+ Parameters
    + `id` (string) - The ID of the desired advanced IP rule.

### Retrieve advanced ip rule [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (advanced ip rules)

### Update advanced ip rule [PUT]
+ Attributes (advanced ip rules)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete advanced ip rule [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## domain rules [/services/firewall/domains]
+ Attributes (object)
    + `enabled`: false                 (boolean, required)
    + `action`: 1                      (number, required) - [Firewall action](#firewall_actions).
    + `host`: facebook.com             (string)
    + `description`: Drop facebook.com (string)
    + `schedule` (object)
        + `enabled`: false (boolean)
        + `id`: sleep      (string) - [Schedule id](#system_schedules).

### Retrieve domain rules [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (domain rules)
            + `id`: domain0 (string)

### Create domain rules [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[domain rules])

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: domain0 (string)

### Delete all domain rules [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## domain rule [/services/firewall/domains/{id}]
+ Parameters
    + `id` (string) - The ID of the desired domain rule.

### Retrieve domain rule [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (domain rules)

### Update domain rule [PUT]
+ Attributes (domain rules)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete domain rule [DELETE]
+ Request ()
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## mac rules [/services/firewall/macs]
+ Attributes (object)
    + `enabled`: false             (boolean, required)
    + `action`: 1                  (number, required) - [Firewall action](#firewall_actions).
    + `mac`: 00:1A:3F:00:6E:10     (string, required)
    + `description`: Drop neighbor (string)
    + `schedule` (object)
        + `enabled`: false (boolean)
        + `id`: sleep      (string) - [Schedule id](#system_schedules).

### Retrieve mac rules [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (mac rules)
            + `id`: 00:1A:3F:00:6E:10 (string)

### Create mac rules [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[mac rules])

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: 00:1A:3F:00:6E:10 (string)

### Delete all mac rules [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## mac rule [/services/firewall/macs/{id}]
+ Parameters
    + `id` (string) - The ID of the desired mac rule.

### Retrieve mac rule [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (mac rules)

### Update mac rule [PUT]
+ Attributes (mac rules)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete mac rule [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## acls [/services/firewall/acls]
<a name="firewall_acls"></a>
- You cannot delete an acl that is referenced by any other endpoint
(**references** > 0).
+ Attributes (object)
    + `description`: ACL description (string) - Acl description.
    + `cidrs`: 10.0.0.1/24 (array[string]) - List of ips.

### Retrieve acls [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (acls)
            + `id`: acl1 (string)
            + `references`: 1 (number)

### Create acls [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[acls])

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: acl1 (string)

### Delete all acls [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## acl [/services/firewall/acls/{id}]
+ Parameters
    + `id` (string) - The ID of the desired acl.

### Retrieve acl [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (acls)
        + `references`: 1 (number)

### Update acl [PUT]
+ Attributes (acls)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete acl [DELETE]
+ Request ()
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204


# Group Services UPnP

## upnp [/services/upnp]
+ Attributes (object)
    + `enabled`: false           (boolean, required)
    + `auto_port_forward`: true  (boolean, required)
    + `friendly_name`: My Router (string)

### Retrieve upnp settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (upnp)

### Update upnp settings [PUT]
+ Attributes (upnp)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Services HTTP Server

## http server [/services/http_server]
+ Attributes (object)
    + `session_timeout`: 300 (number) - Session timeout `(seconds)`
    + `http` (object)
        + `enabled`: false   (boolean, required)
        + `port`: 80         (number)
        + `wan_access`: true (boolean) - Allow access from [**WAN**](#network_wans) interface.
    + `https` (object)
        + `enabled`: false                  (boolean, required)
        + `port`: 443                       (number)
        + `wan_access`: true                (boolean) - Allow access from [**WAN**](#network_wans) interface.
        + `custom_certificate`: true        (boolean) - HTTPS server is using a certificate uploaded by the user.
        + `file_certificate`: base64encoded (string) - Base64 encoded certificate data.
        + `file_key`: base64encoded         (string) - Base64 encoded private key data.

### Retrieve http server settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (http server)

    + Schema
            {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "properties": {
                "session_timeout": {
                "type": "integer",
                "minimum": 60,
                "maximum": 86400
                },
                "http": {
                "type": "object",
                "properties": {
                    "enabled": {
                    "type": "boolean"
                    },
                    "port": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 65535
                    },
                    "wan_access": {
                    "type": "boolean"
                    }
                },
                "required": [
                    "enabled",
                    "port"
                ]
                },
                "https": {
                "type": "object",
                "properties": {
                    "enabled": {
                    "type": "boolean"
                    },
                    "port": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 65535
                    },
                    "wan_access": {
                    "type": "boolean"
                    },
                    "custom_certificate": {
                    "type": "boolean"
                    },
                    "file_certificate": {
                    "type": "string",
                    "minLength": 512
                    },
                    "file_key": {
                    "type": "string",
                    "minLength": 512
                    }
                },
                "required": [
                    "enabled",
                    "port"
                ],
                "if": {
                    "properties": {
                    "custom_certificate": {
                        "const": true
                    }
                    }
                },
                "then": {
                    "dependentRequired": {
                    "custom_certificate": [
                        "file_certificate",
                        "file_key"
                    ]
                    }
                }
                }
            },
            "required": [
                "session_timeout"
            ]
            }

### Update http server settings [PUT]
+ Attributes (http server)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3
    + Schema
            {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "properties": {
                "session_timeout": {
                "type": "integer",
                "minimum": 60,
                "maximum": 86400
                },
                "http": {
                "type": "object",
                "properties": {
                    "enabled": {
                    "type": "boolean"
                    },
                    "port": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 65535
                    },
                    "wan_access": {
                    "type": "boolean"
                    }
                },
                "required": [
                    "enabled",
                    "port"
                ]
                },
                "https": {
                "type": "object",
                "properties": {
                    "enabled": {
                    "type": "boolean"
                    },
                    "port": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 65535
                    },
                    "wan_access": {
                    "type": "boolean"
                    },
                    "custom_certificate": {
                    "type": "boolean"
                    },
                    "file_certificate": {
                    "type": "string",
                    "minLength": 512
                    },
                    "file_key": {
                    "type": "string",
                    "minLength": 512
                    }
                },
                "required": [
                    "enabled",
                    "port"
                ],
                "if": {
                    "properties": {
                    "custom_certificate": {
                        "const": true
                    }
                    }
                },
                "then": {
                    "dependentRequired": {
                    "custom_certificate": [
                        "file_certificate",
                        "file_key"
                    ]
                    }
                }
                }
            },
            "required": [
                "session_timeout"
            ]
            }

+ Response 204

# Group Services SSH Server

## ssh [/services/ssh_server]
+ Attributes (object)
    + `enabled`: false   (boolean, required)
    + `port`: 22         (number)
    + `wan_access`: true (boolean) - Allow access from [**WAN**](#network_wans) interface.

### Retrieve ssh settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (ssh)

### Update ssh settings [PUT]
+ Attributes (ssh)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Services DHCP Servers

## dhcp servers [/services/dhcp_servers]
+ Attributes (object)
    + `lan`: br0                (string, required) - [**LAN**](#network_lans) ID to run this server on.
    + `rebind_protection`: true (boolean) - Enables DNS rebind attack protection by discarding upstream RFC1918 responses.
    + `ipv4` (object)
        + `enabled`: false          (boolean, required)
        + `ip4_start`: 10.0.0.2     (string, required)
        + `ip4_end`: 10.0.0.200     (string, required)
        + `lease_time`: 7200        (number) - Lease time `(seconds)`
        + `domain`: myap.com        (string)
        + `dns4_addresses`: 8.8.8.8 (array[string])
    + `ipv6` (object)
        + `mode`: 0 (enum[number], required)
            + Members
                + `0` - Disabled
                + `1` - Stateless
                + `2` - Stateful
        + `suffix_start`: ::100 (string)
        + `suffix_end`: ::200   (string)

### Retrieve all dhcp servers [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (dhcp servers)
            + `id`: dhcp0 (string)
    + Schema
            {
                "$schema":"http://json-schema.org/draft-07/schema#",
                "type":"array",
                "items":{
                    "type":"object",
                    "required":[
                        "lan"
                    ],
                    "properties":{
                        "lan":{
                            "description":"Lan",
                            "type":"string"
                        },
                        "rebind_protection":{
                            "description":"Rebind protection",
                            "type":"boolean"
                        },
                        "ipv4":{
                            "description":"IPv4 used by the DHCP Server",
                            "type":"object",
                            "required":[
                            "enabled",
                            "ip4_start",
                            "ip4_end"
                            ],
                            "properties":{
                                "enabled":{
                                    "description":"If true, IPv4 is enabled",
                                    "type":"boolean"
                                },
                                "ip4_start":{
                                    "description":"IPv4 start",
                                    "type":"string",
                                    "format":"ipv4"
                                },
                                "ip4_end":{
                                    "description":"IPv4 end",
                                    "type":"string",
                                    "format":"ipv4"
                                },
                                "lease_time":{
                                    "description":"DHCP Lease Time",
                                    "type":"integer",
                                    "minimum":0
                                },
                                "domain":{
                                    "description":"Domain",
                                    "type":"string"
                                },
                                "dns4_addresses":{
                                    "description":"DNS addresses",
                                    "type":"array",
                                    "minItems":0,
                                    "maxItems":5,
                                    "items":{
                                        "description":"DNS",
                                        "type":"string",
                                        "format":"ipv4"
                                    }
                                }
                            }
                        },
                        "ipv6":{
                            "description":"IPv6 used by the DHCP Server",
                            "type":"object",
                            "required":[
                            "mode"
                            ],
                            "properties":{
                                "mode": {
                                    "type": "integer",
                                    "description": "Mode (0 - Disabled, 1 - Stateless, 2 - Stateful)",
                                    "enum": [
                                        0,
                                        1,
                                        2
                                    ]
                                },
                                "suffix_start":{
                                    "description":"IPv6 start sufix",
                                    "type":"string",
                                    "format":"ipv6"
                                },
                                "suffix_end":{
                                    "description":"IPv6 end sufix",
                                    "type":"string",
                                    "format":"ipv6"
                                }
                            }
                        },
                        "id":{
                            "description":"Id",
                            "type":"string"
                        }
                    }
                }
            }

### Create dhcp servers [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[dhcp servers])

    + Headers

            Authorization: Token e6223a...fb7ad3
    + Schema
            {
                "$schema":"http://json-schema.org/draft-07/schema#",
                "type":"array",
                "items":{
                    "type":"object",
                    "required":[
                        "lan",
                        "ipv4"
                    ],
                    "properties":{
                        "lan":{
                            "description":"Lan",
                            "type":"string"
                        },
                        "rebind_protection":{
                            "description":"Rebind protection",
                            "type":"boolean"
                        },
                        "ipv4":{
                            "description":"IPv4 used by the DHCP Server",
                            "type":"object",
                            "required":[
                            "enabled",
                            "ip4_start",
                            "ip4_end"
                            ],
                            "properties":{
                                "enabled":{
                                    "description":"If true, IPv4 is enabled",
                                    "type":"boolean"
                                },
                                "ip4_start":{
                                    "description":"IPv4 start",
                                    "type":"string",
                                    "format":"ipv4"
                                },
                                "ip4_end":{
                                    "description":"IPv4 end",
                                    "type":"string",
                                    "format":"ipv4"
                                },
                                "lease_time":{
                                    "description":"DHCP Lease Time",
                                    "type":"integer",
                                    "minimum":0
                                },
                                "domain":{
                                    "description":"Domain",
                                    "type":"string"
                                },
                                "dns4_addresses":{
                                    "description":"DNS addresses",
                                    "type":"array",
                                    "minItems":0,
                                    "maxItems":5,
                                    "items":{
                                        "description":"DNS",
                                        "type":"string",
                                        "format":"ipv4"
                                    }
                                }
                            }
                        },
                        "ipv6":{
                            "description":"IPv6 used by the DHCP Server",
                            "type":"object",
                            "required":[
                            "mode"
                            ],
                            "properties":{
                                "mode": {
                                    "type": "integer",
                                    "description": "Mode (0 - Disabled, 1 - Stateless, 2 - Stateful)",
                                    "enum": [
                                        0,
                                        1,
                                        2
                                    ]
                                },
                                "suffix_start":{
                                    "description":"IPv6 start sufix",
                                    "type":"string",
                                    "format":"ipv6"
                                },
                                "suffix_end":{
                                    "description":"IPv6 end sufix",
                                    "type":"string",
                                    "format":"ipv6"
                                }
                            }
                        }
                    }
                }
            }
+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: server0 (string)

### Delete all dhcp servers [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## dhcp server [/services/dhcp_servers/{id}]
+ Parameters
    + `id` (string) - The ID of the desired dhcp server.

### Retrieve dhcp server settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (dhcp servers)
    + Schema
            {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                    "lan": {
                        "type": "string",
                        "format": "Lan"
                    },
                    "rebind_protection": {
                        "type": "boolean",
                        "description": "Rebind protection"
                    },
                    "ipv4": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "description": "If true, IPv4 is enabled"
                            },
                            "ip4_start": {
                                "type": "string",
                                "format": "ipv4",
                                "description": "IPv4 start"
                            },
                            "ip4_end": {
                                "type": "string",
                                "format": "ipv4",
                                "description": "IPv4 end"
                            },
                            "lease_time": {
                                "type": "integer",
                                "description": "DHCP Lease Time",
                                "minimum": 0
                            },
                            "domain": {
                                "type": "string",
                                "description": "Domain"
                            },
                            "dns4_addresses": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "DNS"
                                },
                                "description": "DNS addresses",
                                "minItems": 0,
                                "maxItems": 5
                            }
                        },
                        "required": [
                            "enabled",
                            "ip4_start",
                            "ip4_end"
                        ],
                        "description": "IPv4 used by the DHCP Server"
                    },
                    "ipv6": {
                        "type": "object",
                        "properties": {
                            "mode": {
                                "type": "integer",
                                "description": "Mode (0 - Disabled, 1 - Stateless, 2 - Stateful)",
                                "enum": [
                                    0,
                                    1,
                                    2
                                ]
                            },
                            "suffix_start": {
                                "type": "string",
                                "format": "ipv6"
                            },
                            "suffix_end": {
                                "type": "string",
                                "format": "ipv6"
                            }
                        },
                        "required": [
                            "mode"
                        ],
                        "description": "IPv6 used by the DHCP Server"
                    }
                },
                "required": [
                    "lan"
                ]
            }

### Update dhcp server settings [PUT]
+ Attributes (dhcp servers)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3
    + Schema
            {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                    "lan": {
                        "type": "string",
                        "format": "Lan"
                    },
                    "rebind_protection": {
                        "type": "boolean",
                        "description": "Rebind protection"
                    },
                    "ipv4": {
                        "type": "object",
                        "properties": {
                            "enabled": {
                                "type": "boolean",
                                "description": "If true, IPv4 is enabled"
                            },
                            "ip4_start": {
                                "type": "string",
                                "format": "ipv4",
                                "description": "IPv4 start"
                            },
                            "ip4_end": {
                                "type": "string",
                                "format": "ipv4",
                                "description": "IPv4 end"
                            },
                            "lease_time": {
                                "type": "integer",
                                "description": "DHCP Lease Time",
                                "minimum": 0
                            },
                            "domain": {
                                "type": "string",
                                "description": "Domain"
                            },
                            "dns4_addresses": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "ipv4",
                                    "description": "DNS"
                                },
                                "description": "DNS addresses",
                                "minItems": 0,
                                "maxItems": 5
                            }
                        },
                        "description": "IPv4 used by the DHCP Server"
                    },
                    "ipv6": {
                        "type": "object",
                        "properties": {
                            "mode": {
                                "type": "integer",
                                "description": "Mode (0 - Disabled, 1 - Stateless, 2 - Stateful)",
                                "enum": [
                                    0,
                                    1,
                                    2
                                ]
                            },
                            "suffix_start": {
                                "type": "string",
                                "format": "ipv6"
                            },
                            "suffix_end": {
                                "type": "string",
                                "format": "ipv6"
                            }
                        },
                        "description": "IPv6 used by the DHCP Server"
                    }
                }
            }
+ Response 204

### Delete dhcp server [DELETE]
+ Request ()
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## dhcp server nodes [/services/dhcp_servers/{id}/nodes]
+ Parameters
    + `id` (string) - The ID of the desired dhcp server.

+ Attributes (object)
    + `ip4`: 10.0.0.200           (string, required)
    + `mac`: 00:1A:3F:00:6E:20    (string, required)
    + `description`: Thor Desktop (string)
    + `fixed_ip`: false           (boolean) - DHCP is offering a fixed IP to this node.

### Retrieve ipv4 leases [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array[dhcp server nodes])
    + Schema
            {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "ip4": {
                            "type": "string",
                            "format": "ipv4",
                            "description": "Host IP"
                        },
                        "mac": {
                            "type": "string",
                            "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$",
                            "description": "Host MAC Address"
                        },
                        "description": {
                            "type": "string",
                            "format": "string",
                            "description": "Host description",
                            "maxLength" : 64
                        },
                        "fixed_ip": {
                            "type": "boolean",
                            "description": "If the host has a fixed IP"
                        }
                    },
                    "required": [
                    "ip4",
                    "mac"
                    ]
                }
            }
### Create dhcp server nodes [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).
+ Request (application/json)
    + Attributes (array)
        + (object)
            + `ip4`: 10.0.0.253          (string, required)
            + `mac`: 00:1A:3F:00:10:AC   (string, required)
            + `description`: Hulk Mobile (string)

    + Headers

            Authorization: Token e6223a...fb7ad3
    + Schema
            {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "ip4": {
                            "type": "string",
                            "format": "ipv4",
                            "description": "Host IP"
                        },
                        "mac": {
                            "type": "string",
                            "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$",
                            "description": "Host MAC Address"
                        },
                        "description": {
                            "type": "string",
                            "format": "string",
                            "description": "Host description",
                            "maxLength" : 64
                        }
                    },
                    "required": [
                    "ip4",
                    "mac"
                    ]
                }
            }
+ Response 204

### Delete all dhcp server nodes [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## dhcp server node [/services/dhcp_servers/{id}/nodes/{node_id}]
+ Parameters
    + id (string) - The ID of the desired dhcp server.
    + node_id (string) - The ID-node of the desired dhcp server node.

### Update dhcp server node settings [PUT]
+ Attributes (object)
    + `ip4`: 10.0.0.200           (string, required)
    + `mac`: 00:1A:3F:00:6E:20    (string, required)
    + `description`: Thor Desktop (string)
    + `fixed_ip`: false           (boolean)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3
    + Schema
            {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                    "ip4": {
                        "type": "string",
                        "format": "ipv4",
                        "description": "Host IP"
                    },
                    "mac": {
                        "type": "string",
                        "pattern": "^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$",
                        "description": "Host MAC Address"
                    },
                    "description": {
                        "type": "string",
                        "format": "string",
                        "description": "Host description",
                        "maxLength" : 64
                    },
                    "fixed_ip": {
                            "type": "boolean",
                            "description": "If the host has a fixed IP"
                    }
                }
            }
+ Response 204

### Delete dhcp server node [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Services Log

## log [/services/log]
+ Attributes (object)
    + `enabled`: false (boolean, required)
    + `persist`: true  (boolean) - Perist log data on after reboot.
    + `level`: 6       (number) - [Log level](#log_levels).
    + `remotes`        (array)
        + (object)
            + `enabled`: false  (boolean)
            + `host`: mylog.com (string, required)
            + `port`: 22        (number)
            + `level`: 6        (number) - [Log level](#log_levels).


### Retrieve log settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (log)

### Update log settings [PUT]
+ Attributes (log)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Services Discovery
This service uses multicast protocol to provide some basic information from the
device. Intelbras discovery uses UDP on port 10001.

## discovery [/services/discovery]
+ Attributes (object)
    + `lldp`: false      (boolean) - Enable Link Layer Discovery Protocol `(LLDP, IEEE 802.1AB)`
    + `cdp`: false       (boolean) - Enable Cisco Discovery Protocol
    + `intelbras`: false (boolean) - Enable Intelbras discovery

### Retrieve discovery settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (discovery)

### Update discovery settings [PUT]
+ Attributes (discovery)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Services SNMP

## snmp [/services/snmp]
+ Attributes (object)
    + `enabled`: false               (boolean, required)
    + `community`: public            (string, required)
    + `port`: 161                    (number)
    + `location`: Home               (string)
    + `contact`: me@mydomain.com     (string)
    + `description`: Wireless Router (string)
    + `wan_access`: true             (boolean) - Allow access from [**WAN**](#network_wans) interface.

### Retrieve snmp settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (snmp)

### Update snmp settings [PUT]
+ Attributes (snmp)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Services Captive Portals
When you use external/radius captive portal, these are the parameters sent to your
server:

- **continue**: Original URL that user tried to reach
- **ip**: User's IP address
- **mac**: User's MAC address
- **ap_mac**: MAC address from the device that user is connected to
- **ssid**: SSID from the device that user is connected to
- **ts**: Timestamp
- **redirect_uri**: When using Radius, this is the URL that your server needs to redirect the client to
- **user_hash**: When using Radius, your server needs to pass this parameter back without modifying it

## brief [/services/captive_portals/brief]
<a name="captive_portals_brief"></a>

### GET
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `max_entries`: 1        (number) - Maximum number of captive portal services.
        + `available_interfaces`: (array[string]) - Available interfaces to enable captive portal service to.
            + Members
                + `wlan0`
                + `wlan1`
        + `supported_types`: (array[string]) - Supported captive portal types.
            + Members
                + `radius` - External service based on Radius authentication
                + `external` - Generic external service
                + `facebook` - Facebook WiFi
        + `interfaces`: wlan0       (array[string]) - Interfaces currently using captive portal service.
        + `nodes_authenticated`: 10 (number) - Number of currently authenticated devices.

## captive portals [/services/captive_portals]
+ Attributes (object)
    + `enabled`: false                                 (boolean, required)
    + `interfaces`: wlan0                              (array[string], required)
    + `type`: external                                 (string, required) - Captive portal type according to **supported_types** on [**/brief**](#captive_portals_brief).
    + `url`: http://www.captive.com.br/meucaptive.html (string) - URL to redirect users to. Not required only for **facebook** type.

### Retrieve captive portals [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (captive portals)
            + `id`: captive0 (string)

### Create captive portals [POST]
<a name="create_captive_portal"></a>
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[captive portals])

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: captive0 (string)

### Delete all captive portals [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## captive portal [/services/captive_portals/{id}]
+ Parameters
    + `id` (string) - The ID of the desired captive portal.

### Retrieve captive portal [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (captive portals)

### Update captive portal [PUT]
+ Attributes (captive portals)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete captive portal [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## captive portal nodes [/services/captive_portals/nodes]
+ Attributes (object)
    + `mac`: 00:1A:3F:00:6E:CF (string)
    + `ip4`: 192.168.0.2       (string)

### Retrieve nodes [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (captive portal nodes)
            + `id`: 00:1A:3F:00:6E:CF (string)

### Authenticate nodes [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (object)
        + `ids`: 00:1A:3F:00:6E:CF (array[string], required) - Could be MAC address or IP address.

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: 00:1A:3F:00:6E:CF (string)

### Deauthenticate all nodes [DELETE]
+ Request (application/json)
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## captive portal node [/services/captive_portals/nodes/{id}]
+ Parameters
    + `id` (string) - The ID of the desired node.
+ Attributes (object)
    + `mac`: 00:1A:3F:00:6E:CF (string)
    + `ip4`: 192.168.0.2       (string)

### Retrieve node [GET]
+ Request
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (captive portal node)

### Deauthenticate node [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Services Captive Portal Facebook WiFi
Facebook Wi-Fi is a captive portal solution that provides Internet access upon
a check-in into your business page.

This service requires user interaction to be configured by following these steps:

1 - Register your device and get your **gateway_id** through
[**facebook action**](#facebook_actions) type **"register"**;

2 - Use your browser to access facebook wi-fi page settings:
**https://www.facebook.com/wifiauth/config?gw_id={gateway_id}**;

3 - Use your browser to access **https://graph.facebook.com/{gateway_id}** to get
your **page** name and **page_id**;

4 - Save your [facebook settings](#update_facebook_settings);

5 - [Create or change your captive portal settings](#create_captive_portal) using
**type="facebook"**.

## brief [/services/captive_portals/facebook/brief]
<a name="facebook_status_code"></a>
**status_code**:
- `0`: Device is registered and has **gateway_id**
- `1`: Device is not registered and has no **gateway_id**
- `2`: No description error
- `3`: Device register has changed successfully
- `4`: Device register change error
- `5`: facebooklogin.intelbras.com.br server error
- `6`: facebook.com server error
- `7`: Return parse error
- `8`: Unexpected error
- `9`: No Internet connection
- `10`: Facebook is temporary unavailable

### GET
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `help_url`: https://facebooklogin.intelbras.com.br/help.html  (string) - Facebook help link.
        + `assign_url`: https://www.facebook.com/wifiauth/config?gw_id= (string) - URL to associate your page to this device.
        + `gateway_id`: 429692610572303                                 (string) - If empty, need to register first.
        + `status_code`: 0                                              (string) - [Status code](#facebook_status_code).
        + `page`: Intelbras                                             (string)
        + `page_id`: 429692610572303                                    (string)

## facebook [/services/captive_portals/facebook]
+ Attributes (object)
    + `page`: Intelbras          (string, required)
    + `page_id`: 429692610572303 (string, required)

### Retrieve facebook settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (facebook)

### Update facebook settings [PUT]
<a name="update_facebook_settings"></a>
+ Attributes (facebook)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## facebook actions [/services/captive_portals/facebook/actions]
<a name="facebook_actions"></a>
+ Attributes (object)
    + `type`: register (enum[string], required)
        + Members
            + `register`
            + `unregister`

### POST [POST]
+ Request register (application/json)
    + Attributes (object)
        + `type`: register (string)
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `gateway_id`: 429692610572303 (string)

+ Request unregister (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Services Advertises
Advertise service also know as **Splash Page** is a kind of captive portal service
where the users have to watch an advertise (video or image) in order to have
Internet access.

You can have both advertise and another captive portal service working together.
In that case, your advertise service will allways come first, redirecting the user
to the second captive portal service afterwards.

## brief [/services/captive_portals/advertises/brief]

### GET
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `max_entries`: 1        (number) - Maximum number of advertise services.
        + `available_interfaces`: (array[string]) - Available interfaces to enable advertise service to.
            + Members
                + `wlan0`
                + `wlan1`
        + `interfaces`: wlan0       (array[string]) - Interfaces currently using advertise service.

## advertises [/services/captive_portals/advertises]
+ Attributes (object)
    + `enabled`: false        (boolean, required)
    + `interfaces`: wlan0     (array[string], required)
    + `session_timeout`: 3600 (string, required) - Session timeout `(seconds)` for authenticated users.
    + `media` (object)
        + `type`: 1 (enum[number], required)
            + Members
                + `0` - Image
                + `1` - Video
        + `link`: https://www.youtube.com/watch?v=fthWKgjg4OA (string, required) - URL containing the media.
        + `view_time`: 30                                     (number, required) - Advertise view time `(seconds)`

### Retrieve advertises [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (advertises)
            + `id`: advd0 (string)

### Create advertises [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[advertises])

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: advd0 (string)

### Delete all advertises [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## advertise [/services/captive_portals/advertises/{id}]
+ Parameters
    + `id` (string) - The ID of the desired advertise.

### Retrieve advertise [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (advertises)

### Update advertise [PUT]
+ Attributes (advertises)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete advertise [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Services Radius Servers

## radius servers [/services/radius_servers]
+ Attributes (object)
    + `host`: myradius.com             (string, required)
    + `secret`: my_secret              (string, required) - Radius shared secret.
    + `port_auth`: 1812                (number)
    + `port_acct`: 1813                (number)
    + `description`: This is my server (string)

### Retrieve all servers [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (radius servers)
            + `id`: radius0 (string)

### Create radius servers [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[radius servers])

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: radius0 (string)

### Delete all servers [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## radius server [/services/radius_servers/{id}]
+ Parameters
    + `id` (string) - The ID of the desired radius server.

### Retrieve radius settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (radius servers)

### Update radius settings [PUT]
+ Attributes (radius servers)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete radius server [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Services Watchdog
This is a simple **ping based** watchdog service. If all of the hosts fail to
reply, device will reboot.

## watchdog [/services/watchdog]
+ Attributes (object)
    + `enabled`: false    (boolean, required)
    + `hosts`: google.com (array[string], required) - List of hosts to check for alive status.
    + `interval`: 5       (number, required) - Time interval `(seconds)` within each check.

### Retrieve watchdog settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (watchdog)

### Update watchdog settings [PUT]
+ Attributes (watchdog)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Services Notifications
When a system event occurs, such as a button been pressed or an interface changed
it's status, we can export them to an external server through HTTP. If using **POST**
method, the payload will use **JSON** notation.

Also, the payload will change depending on the **event**:

**internet**:
<pre><code>
{
    "event": "internet",
    "status": true
}
</code></pre>

**interface**:
<pre><code>
{
    "event": "interface",
    "alias": "lan",
    "device": "eth0",
    "action": "down"
}
</code></pre>

**button**:
<pre><code>
{
    "event": "button",
    "alias": "reset",
    "seen": 10, # How many seconds it was pressed/released
    "action": "pressed"
}
</code></pre>

**wifi**:
<pre><code>
{
    "event": "wifi",
    "interface": "wlan0",
    "timestamp": 1558112740,
    "mac": "00:1A:3F:9E:6E:CF",
    "action": "connected"
}
</code></pre>

**all others**:
<pre><code>
{
    "event": "{event}"
}
</code></pre>

## brief [/services/notifications/brief]
<a name="notifications_brief"></a>

### GET
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `supported_events`: (array[string])
            + Members
                + `config_reset` - Device turned to it's default configuration.
                + `reboot` - Device is rebooting.
                + `tamper` - Tamper was activated.
                + `internet` - Device internet access status.
                + `upgrading` - Device is upgrading the firmware.
                + `date_changed` - System date has changed.
                + `interface` - System interface event.
                + `button` - System button event.
                + `wifi` - System wifi event.
        + `enabled_events`: tamper (array[string])

## notification actions [/services/notifications/actions]
+ Attributes (object)
    + `type`: test (enum[string], required)
        + Members
            + `test`

### POST [POST]
+ Request test (application/json)
    + Attributes (object)
        + `type`: test (string) - To manually test an event.
        + `data` (object, required)
            + `event`: tamper (string)

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## notifications [/services/notifications]
+ Attributes (object)
    + `enabled`: false         (boolean, required)
    + `events`: interface (array[string], required) - Events according to [**supported_events**](#notifications_brief).
    + `http` (object)
        + `method`: 1 (enum[number], required) - HTTP method to make the request.
            + Members
                + `0` - GET
                + `1` - POST
        + `urls`: http://myserver.com/event (array[string], required) - List of URLs to receive **events**.
        + `extra_fields` (array) - Extra fields to be sent inside the payload.
            + (object)
                + `key`: token         (string)
                + `value`: 234Xdwerdwe (string)

### Retrieve notifications [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (notifications)
            + `id`: event0 (string)

### Create notifications [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[notifications])

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: event0 (string)

### Delete all notifications [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## notification [/services/notifications/{id}]
+ Parameters
    + `id` (string) - The ID of the desired notification.

### Retrieve notification [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (notifications)

### Update notification [PUT]
+ Attributes (notifications)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete notification [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Services NTP
**Network Time Protocol** client service.

## ntp [/services/ntp]
+ Attributes (object)
    + `enabled`: false   (boolean, required)
    + `hosts`: a.ntp.br  (array[string], required) - List of hosts to get the time from.
    + `zone` (object)
        + `timezone`: BRT3          (string)
        + `name`: America/Sao Paulo (string)
        + `daylight_saving`: false  (boolean)

### Retrieve ntp settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (ntp)

### Update ntp settings [PUT]
+ Attributes (ntp)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Services Storages

## brief [/services/storages/brief]

### GET
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `supported_types`: ftp (array[string])
            + Members
                + `ftp`

## storages [/services/storages]
+ Attributes (object)
    + `enabled`: false      (boolean, required)
    + `type`: ftp           (string, required)
    + `port`: 21            (number)
    + `login`: login        (string)
    + `password`: pass      (string)
    + `description`: My FTP (string)

### Retrieve all storages [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (storages)
            + `id`: storage0 (string)

### Create storages [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[storages])

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: storage0 (string)

### Delete all storages [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## storage [/services/storages/{id}]
+ Parameters
    + `id` (string) - The ID of the desired storage.

### Retrieve storage settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (storages)

### Update storage settings [PUT]
+ Attributes (storages)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete storage [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Services Compliance

## compliance [/services/compliance{?language}]
+ Parameters
    + language (string, optional) - pt-br, es, en

+ Attributes (object)
    + `terms_accepted`: false (boolean, required) - Acceptance status of terms of use
    + `policy_accepted`: false (boolean, required) - Acceptance status of policy

### Retrieve compliance settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (compliance)
        + `terms_of_use`: Plain Text (string) - Terms of use
        + `privacy_policy`: Plain Text (string) - Privacy policy

    + Schema
            {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "properties": {
                "terms_accepted": {
                "type": "boolean"
                },
                "policy_accepted": {
                "type": "boolean"
                },
                "terms_of_use": {
                "type": "string",
                "maxLength": 26624
                },
                "privacy_policy": {
                "type": "string",
                "maxLength": 26624
                }
            },
            "required": [
                "terms_accepted",
                "policy_accepted",
                "terms_of_use",
                "privacy_policy"
            ]
            }


## compliance update [/services/compliance]

### Update compliance settings [PUT]
+ Attributes (compliance)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3
    + Schema
            {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "properties": {
                "terms_accepted": {
                "type": "boolean"
                },
                "policy_accepted": {
                "type": "boolean"
                }
            },
            "required": [
                "terms_accepted",
                "policy_accepted",
            ]
            }

+ Response 204

# Group Services TR069

## tr069 [/services/tr069]
+ Attributes (object)
    + `enabled`: true (boolean, required) - Enable or disable the tr069
    + `cwmp_parameter`: true (boolean) - Use CWMP parameters

### Retrieve tr069 settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (tr069)
        + `connection_request` (object)
            + `enabled`: true (boolean) - Indicates if authentication is needed
            + `username`: username (string) - Username for authentication
            + `password`: password (string) - Password for authentication
            + `path`: /tr069 (string) - Endpoint path
            + `port`: 7547 (number) - Port number
            + `wan_access`: true (boolean) - Indicate if has access via wan
            + `wan_acl`: acl1 (string) - Wan access control list in firewall
        + `acs` (object)
            + `url`: http://acs.server:8080/ (string) - Auto configuration server url
            + `username`: username (string) - Username for login
            + `password`: password (string) - Password for login
            + `periodic_information`: true (boolean) - Indicates if information is period
            + `periodic_information_interval`: 300 (number) - The period of information if true
            + `ca_file`: base64encoded (string) - Base64 encoded certificate autority file data.

### Update tr069 settings [PUT]
+ Attributes (tr069)
    + `connection_request` (object)
        + `enabled`: true (boolean, required) - Indicates if authentication is needed
        + `username`: username (string) - Username for authentication
        + `password`: password (string) - Password for authentication
        + `path`: /tr069 (string) - Endpoint path
        + `port`: 7547 (number) - Port number
        + `wan_access`: true (boolean) - Indicate if has access via wan
        + `wan_acl`: acl1 (string) - Wan access control list in firewall
    + `acs` (object)
        + `url`: http://acs.server:8080/ (string) - Auto configuration server url
        + `username`: username (string) - Username for login
        + `password`: password (string) - Password for login
        + `periodic_information`: true (boolean) - Indicates if information is period
        + `periodic_information_interval`: 300 (number) - The period of information if true

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Services Firmware

## firmware service settings  [/services/firmware]
+ Attributes
    + `enabled`: true, (boolean) - Enable firmware management service
    + `schedule`: (object)
        + `enabled`: false (boolean) - Enable auto update
        + `id`: update (string) - Schedule's identifier
        + `severity`: 2 (number) - Minimal severity to auto update

### Retrieve firmware settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (firmware service settings)

### Configure firmware settings [PUT]
+ Attributes (firmware service settings)

+ Request (application/json)

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## firmware versions [/services/firmware/versions{?offset,limit}]
+ Parameters
    + `offset` (number, optional) - Firmware versions start offset (for paging)
    + `limit` (number, optional) - Firmware versions maximum entries to return
+ Attributes (object)
    + `version`: 1.0.0 (string) - The Firmware version.
    + `summary`: Plain text (string) - The Firmware summary of the version
    + `severity`: 1 (number)

### Retrieve firmwares [GET]
+ Request
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (firmware versions)
            + `id`: 1.0.0 (string) - The ID of the firmware version

## firmware [/services/firmware/versions/{id}]
+ Parameters
    + `id` (string) - The ID of the firmware version.
+ Attributes (firmware versions)
    + `changelog`: Plain text (string) - The changes on the Firmware

### Retrieve firmware information [GET]
+ Request
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (firmware)


## upgrade firmware [/services/firmware/versions/{id}/actions]
Action to upgrade firmware with respective id.
+ Parameters
    + `id` (string) - The ID of the firmware version.
+ Attributes
    + `type`: upgrade (string,required) - Action type.

### Upgrade firmware [POST]
+ Request (application/json)
    + Attributes
        + `type`: upgrade (string,required) - Action type.
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204 (application/json)

## latest firmware [/services/firmware/versions/latest]
+ Attributes (firmware)
    + `id`: 1.0.0 (string) - The ID of the firmware version

### Retrieve latest firmware [GET]
+ Request
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (latest firmware)

# Group Services DDNS

## DDNSs [/services/ddnss]
+ Attributes (object)
    + `enabled`: true                         (boolean, required)
    + `wan_id`: wan0                          (string, required)  - ID of the [WAN interface](#service_ids) associated with the DDNS
    + `service`: `ddns-intelbras`             (string, required)  - Service provider
    + `domain`: `me.ddns-intelbras.com.br`    (string, required)  - Hostname to be updated
    + `username`: my_name                     (string, required)  - User for authentication on provider
    + `password`: my_pass                     (string)            - Password for authentication on provider (not required by ddns-intelbras service)
    + `check_interval`: 120                   (number)            - Check IP updates interval (seconds)
    + `retry_interval`: 30                    (number)            - Wait time before a new try, in case of error (seconds)
    + `force_interval`: 240                   (number)            - Force a new update to the service provider, in case of no IP update detection (seconds)

### Retrieve all DDNSs [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (DDNSs)
            + `id`: ddns0 (string)
            + `supported_services`: (array[string]) - Supported service providers
                + Members
                    + `ddns-intelbras`
                    + `dyndns`
                    + `no-ip`

### Create DDNS [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[DDNSs])

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: ddns0 (string)

### Delete all DDNSs [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## DDNS [/services/ddns/{id}]
+ Parameters
    + `id` (string) - The ID of the desired DDNS.

### Retrieve DDNS settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (DDNSs)
        + `supported_services`: (array[string]) - Supported service providers
            + Members
                + `ddns-intelbras`
                + `dyndns`
                + `no-ip`


### Update DDNS settings [PUT]
+ Attributes (DDNSs)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete DDNS [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Services SMS

## brief [/services/smss/brief]

### GET
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + memory_is_full                (boolean) - When true, the SMS storage is full
        + sent                          (number) - Number of stored sent SMSs
        + received                      (number) - Number of stored received SMSs


## SMSs [/services/smss/{?offset,limit}]
+ Parameters
    + `offset`                          (number) - Received SMS offset (for paging)
    + `limit`                           (number) - Received SMS maximum entries to return
+ Attributes (object)
    + `phone`: `+5535911112222`         (string) - Sender phone number
    + `text`: `Hello`                   (string) - SMS text

### retrieve all SMSs [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (SMSs)
            + `id`: sms0 (string)
            + `timestamp`: 1558112740           (number) - Unix timestamp
            + `type`: 1 (enum[number])
                + Members
                    + `0` - Sent
                    + `1` - Received

## delete SMSs [/services/smss]
### delete all SMSs [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## SMS [/services/sms/{id}]
+ Parameters
    + `id` (string) - The ID of the desired SMS.

### retrieve SMS [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (SMSs)
        + `timestamp`: 1558112740           (number) - Unix timestamp
        + `type`: 1 (enum[number])
            + Members
                + `0` - Sent
                + `1` - Received

### delete SMS [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## received SMSs [/services/smss/received{?offset,limit}]
+ Parameters
    + `offset`                          (number) - Received SMS offset (for paging)
    + `limit`                           (number) - Received SMS maximum entries to return
+ Attributes (SMSs)
    + `timestamp`: 1558112740           (number) - Unix timestamp

### retrieve all received SMSs [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (received SMSs)
            + `id`: sms0 (string)

## delete received SMSs [/services/smss/received]
### delete all received SMSs [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## received SMS [/services/sms/received/{id}]
+ Parameters
    + `id` (string) - The ID of the desired SMS.

### retrieve received SMS [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (received SMSs)

### delete received SMS [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## sent SMSs [/services/smss/sent{?offset,limit}]
+ Parameters
    + `offset`                          (number) - Received SMS offset (for paging)
    + `limit`                           (number) - Received SMS maximum entries to return
+ Attributes
    + `phone`: `+5535911112222`         (array[string], required) - Recipients phone numbers
    + `text`: `Hello`                   (string, required) - SMS text
    + `flash`: false                    (boolean) - When true, a flash SMS (3GPP class 0) will be sent
    + `smsc`: `+5599911112222`          (string) - The SMS service center number
    + `delivery_report`: false          (boolean) - When true, a delivery report will be requested

### retrieve all sent SMSs [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (sent SMSs)
            + `id`: sms0 (string)
            + `timestamp`: 1558112740           (number) - Unix timestamp

## delete sent SMSs [/services/smss/sent]
### delete all sent SMSs [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## sent SMS [/services/sms/sent/{id}]
+ Parameters
    + `id` (string) - The ID of the desired SMS.

### retrieve sent SMS [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (sent SMSs)
        + `timestamp`: 1558112740           (number) - Unix timestamp

### delete sent SMS [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## send SMS [/services/sms/sent]
### POST [POST]
+ Request send (application/json)
    + Attributes (sent SMSs)

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)

## SMS actions [/services/sms/actions]
Send SMS without saving

+ Attributes (object)
    + `type`: send (enum[string], required)
        + Members
            + `send` - Send a SMS

### POST [POST]
+ Request send (application/json)
    + Attributes (object)
        + `type`: send                  (string)
        + `data` (sent SMSs)

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)

# Group Services EasyMesh
Wi-Fi EasyMesh™ networks employ multiple access points that work together to form a
unified network that provides smart, efficient Wi-Fi throughout the home and outdoor
spaces. The **Intelbras** EasyMesh commercial name is **inMesh**.

## brief [/services/easymesh/brief]

### GET
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `max_nodes`: 6  (number) - Maximum number of nodes supported
        + `connected_nodes`: 4  (number) - Number of EasyMesh connected nodes

## easymesh [/services/easymesh]
+ Attributes (object)
    + `enabled`: true (boolean, required) - Enable or disable the EasyMesh service
    + `mode`: 0 (enum[number], required) - EasyMesh operating mode
        + Members
            + `0` - controller
            + `1` - agent
    + `backhaul`: 0 (enum[number], required) - Connection type between APs
        + Members
            + `0` - auto
            + `1` - 2GHz
            + `2` - 5GHz
            + `3` - ethernet
    + `sync_status`: 0 (enum[number]) - Synchronization status between APs
        + Members
            + `0` - stopped
            + `1` - running
            + `2` - connected
    + `name`: my_device_name (string)
    + `version`: R2   (string) - EasyMesh version
    + `signal`: `-55` (number, required) - Signal strenght `(dBm)`

### Retrieve easymesh settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (easymesh)
        + `id`: 00:1A:3F:00:6E:CF (string)

### Update easymesh settings [PUT]
+ Attributes (object)
    + `name`: my_device_name (string)
    + `enabled`: true   (boolean, required)
    + `mode`: 0         (enum[number], required)
        + Members
            + `0` - controller
            + `1` - agent
    + `backhaul`: 0     (enum[number], required)
        + Members
            + `0` - auto
            + `1` - 2GHz
            + `2` - 5GHz
            + `3` - ethernet

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## easymesh nodes [/services/easymesh/nodes]
+ Attributes (object)
    + `name`: my_device_name (string)
    + `online`: true         (boolean)
    + `ip4`: 192.168.0.2     (string)
    + `signal`: `-55`        (number)
    + `backhaul`: 0          (enum[number])
        + Members
            + `0` - auto
            + `1` - 2GHz
            + `2` - 5GHz
            + `3` - ethernet

### Retrieve nodes [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (easymesh nodes)
            + `id`: 00:1A:3F:00:6E:CF (string)

# Group Network

## network [/network]
+ Attributes (object)
    + `routing`: true (boolean, required) - Enable router mode.
    + `hostname`: my_device (string)

### Retrieve network settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (network)

### Update network settings [PUT]
+ Attributes (network)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

## nodes [/network/nodes]
This is a collection of information from many different sources that refers to
a network node.

+ Attributes (object)
    + `mac`: 00:1A:3F:00:6E:20    (string)
    + `description`: Thor Desktop (string)
    + `ips`: 10.0.0.200 (array[string])
    + `fixed_ip`: false (boolean) - DHCP is offering a fixed IP to this node.
    + `rx_bytes`: 91784  (number)
    + `tx_bytes`: 384360 (number)
    + `acl` (object)
        + `wifi`: false (boolean) - This node is included to the access control list that belongs to WiFi interface.
        + `pon`: false  (boolean) - This node is included to the access control list that belongs to PON interface.
    + `interface` (object)
        + `type`: 1 (enum [number]) - Interface type identification.
            + `0` - Ethernet
            + `1` - Wifi
            + `2` - Pon
        + `id`: eth0 (string) - Interface id.
    + `wifi` (object)
        + `ssid`:  Guest   (string)
        + `signal`: `-55`    (number, required) - Signal strenght `(dBm)`.
        + `tx_rate`: 120000  (number) - Tx rate in Kbits per second.
        + `rx_rate`: 120000  (number) - Rx rate in Kbits per second.
        + `phy_mode`: 0      (number) - [PHY mode](#wifi_phy_modes).
### Retrieve all nodes [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (nodes)
            + `id`: 00:1A:3F:00:6E:20 (string)

## dns [/network/dns]
+ Attributes (object)
    + `ipv4` (object)
        + `mode`: 1 (enum[number])
            + Members
                + `0` - Automatic
                + `1` - Manual
        + `ip4_addresses`: 8.8.8.8 (array[string])
    + `ipv6` (object)
        + `mode`: 1 (enum[number])
            + Members
                + `0` - Automatic
                + `1` - Manual
        + `ip6_addresses`: 2001:4860:4860::8888 (array[string])

### Retrieve dns settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (dns)

    + Schema
        {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
            "ipv4": {
            "type": "object",
            "properties": {
                "mode": {
                "type": "integer",
                "enum": [
                    0,
                    1
                ]
                },
                "ip4_addresses": {
                "type": "array",
                "items": [
                    {
                    "type": "string",
                    "format":"ipv4"
                    }
                ]
                }
            },
            "required": [
                "mode",
                "ip4_addresses"
            ]
            },
            "ipv6": {
            "type": "object",
            "properties": {
                "mode": {
                "type": "integer",
                "enum": [
                    0,
                    1
                ]
                },
                "ip6_addresses": {
                "type": "array",
                "items": [
                    {
                    "type": "string",
                    "format":"ipv6"
                    }
                ]
                }
            },
            "required": [
                "mode",
                "ip6_addresses"
            ]
            }
        },
        "required": [
            "ipv4",
            "ipv6"
        ]
        }


### Update dns settings [PUT]
+ Attributes (dns)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3
    + Schema
            {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "properties": {
                "ipv4": {
                "type": "object",
                "properties": {
                    "mode": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                    },
                    "ip4_addresses": {
                    "type": "array",
                    "items": [
                        {
                        "type": "string",
                        "format":"ipv4"
                        }
                    ]
                    }
                },
                "required": [
                    "mode",
                    "ip4_addresses"
                ]
                },
                "ipv6": {
                "type": "object",
                "properties": {
                    "mode": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ]
                    },
                    "ip6_addresses": {
                    "type": "array",
                    "items": [
                        {
                        "type": "string",
                        "format":"ipv6"                        }
                    ]
                    }
                },
                "required": [
                    "mode",
                    "ip6_addresses"
                ]
                }
            }
            }

+ Response 204

## dns active [/network/dns/active]
+ Attributes (object)
    + `ipv4` (object)
        + `mode`: 1 (enum[number])
            + Members
                + `0` - Automatic
                + `1` - Manual
        + `ip4_addresses`: 8.8.8.8 (array[string])
    + `ipv6` (object)
        + `mode`: 1 (enum[number])
            + Members
                + `0` - Automatic
                + `1` - Manual
        + `ip6_addresses`: 2001:4860:4860::8888 (array[string])

### Retrieve active dns settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (dns active)

    + Schema
        {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
            "ipv4": {
            "type": "object",
            "properties": {
                "mode": {
                "type": "integer",
                "enum": [
                    0,
                    1
                ]
                },
                "ip4_addresses": {
                "type": "array",
                "items": [
                    {
                    "type": "string",
                    "format":"ipv4"
                    }
                ]
                }
            },
            "required": [
                "mode",
                "ip4_addresses"
            ]
            },
            "ipv6": {
            "type": "object",
            "properties": {
                "mode": {
                "type": "integer",
                "enum": [
                    0,
                    1
                ]
                },
                "ip6_addresses": {
                "type": "array",
                "items": [
                    {
                    "type": "string",
                    "format":"ipv6"
                    }
                ]
                }
            },
            "required": [
                "mode",
                "ip6_addresses"
            ]
            }
        },
        "required": [
            "ipv4",
            "ipv6"
        ]
        }
    

# Group Network Routes
Static routes settings.

## routes [/network/routes]
+ Attributes (object)
    + `description`: My business network (string)
    + `cidr`: 10.2.0.0/24                (string, required)
    + `gw`: 10.0.0.2                     (string, required)

### Retrieve all routes [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (routes)
            + `id`: cfg03 (string)

### Create routes [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[routes])

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: cfg03 (string)

### Delete all routes [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## route [/network/routes/{id}]
+ Parameters
    + `id` (string) - The ID of the desired route.

### Retrieve route settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (routes)

### Update route settings [PUT]
+ Attributes (routes)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete route [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Network VLANs

## vlans [/network/vlans]
+ Attributes (VLAN Base ID)
    + `virtual_interfaces`: eth0.100 (array).

### Retrieve all vlans [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array[vlans])

    + Schema
            {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "array",
            "minItems": 0,
            "maxItems": 4094,
            "items": [
                {
                "type": "object",
                "properties": {
                    "interfaces": {
                    "type": "array",
                    "minItems": 1,
                    "items": [
                        {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 15
                        }
                    ]
                    },
                    "virtual_interfaces": {
                    "type": "array",
                    "minItems": 1,
                    "items": [
                        {
                            "type": "string",
                            "minLength": 3,
                            "maxLength": 20
                        }
                    ]
                    },
                    "8021p_tag": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 4094
                    }
                },
                "required": [
                    "interfaces",
                    "virtual_interfaces",
                    "id"
                ]
                }
            ]
            }


### Create vlans [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[VLAN Base ID])

    + Headers

            Authorization: Token e6223a...fb7ad3
    + Schema
            {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "array",
            "minItems": 1,
            "maxItems": 4094,
            "items": [
                {
                "type": "object",
                "properties": {
                    "interfaces": {
                        "type": "array",
                        "minItems": 1,
                        "items": [
                        {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 15
                        }
                    ]
                    },
                    "8021p_tag": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 4094
                    }
                },
                "required": [
                    "interfaces",
                    "id"
                ]
                }
            ]
            }

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: 100 (number)

    + Schema
        {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "properties": {
            "id": {
                "type": "integer",
                "minimum": 1,
                "maximum": 4094
            }
        }
        }

### Delete all vlans [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## vlan [/network/vlans/{id}]
+ Parameters
    + `id` (string) - The ID of the desired vlan.
    + `virtual_interfaces`: eth0.100 (array).

### Retrieve vlan settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (vlans)

    + Schema
            {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "properties": {
                "interfaces": {
                "type": "array",
                "minItems": 1,
                "items": [
                    {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15
                    }
                ]
                },
                "virtual_interfaces": {
                "type": "array",
                "minItems": 1,
                "items": [
                    {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 20
                    }
                ]
                },
                "8021p_tag": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 4094
                }
            },
            "required": [
                "interfaces",
                "id"
            ]
            }

### Update vlan settings [PUT]
+ Attributes (VLAN Base)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

    + Schema
            {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "properties": {
                "interfaces": {
                "type": "array",
                "minItems": 1,
                "items": [
                    {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 15
                    }
                ]
                },
                "8021p_tag": {
                    "type": "boolean"
                }
            },
            "required": [
                "interfaces"
            ]
            }

+ Response 204

### Delete vlan [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Network LANs
<a name="network_lans"></a>
Basically, a **LAN** (with multiple interfaces) is a network bridge with IP address
attributes. In other words, if you create a **LAN** with multiple interfaces and
no IP address, you have a simple **bridge**.

- Be carefull when removing a **LAN**, since if you do not have any **LAN**, you
will not be able to access your device!

## lans app_traits [/network/lans/app_traits]

### GET
+ Request
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `max_entries`: 1 (number) - Maximum number of lans entries.

## lans [/network/lans]
+ Attributes (LAN Base)

### Retrieve all lans [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (lans)
            + `default`: false (boolean) - When true, indicates that this object cannot be deleted.
            + `id`: br0 (string)

    + schema
            {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                    "interfaces": {
                        "type": "array",
                        "items": {
                        "type": "string",
                        "default": "eth0",
                        "examples": [
                            "eth0"
                        ]
                        }
                    },
                    "spanning_tree": {
                        "type": "boolean",
                        "default": false,
                        "examples": [
                        true,
                        false
                        ]
                    },
                    "eapol_passthrough": {
                        "type": "boolean",
                        "default": false,
                        "examples": [
                        true,
                        false
                        ]
                    },
                    "service_id": {
                        "type": "integer",
                        "default": 10,
                        "examples": [
                        10
                        ]
                    },
                    "ipv4": {
                        "type": "object",
                        "properties": {
                        "nat": {
                            "type": "boolean",
                            "default": true,
                            "examples": [
                            true,
                            false
                            ]
                        },
                        "mode": {
                            "description":"Mode (0 - IP Static, 1 - DHCP)",
                            "type": "integer",
                            "default": 0,
                            "examples": [
                            0
                            ],
                            "minimum": 0,
                            "maximum": 1
                        },
                        "cidr4s": {
                            "type": "array",
                            "items": {
                            "type": "string",
                            "default": "10.0.0.1/24",
                            "examples": [
                                "10.0.0.1/24"
                            ]
                            }
                        },
                        "gw4": {
                            "type": "string",
                            "default": "10.0.0.254",
                            "examples": [
                            "10.0.0.254"
                            ],
                            "format": "ipv4"
                        },
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "examples": [
                            true,
                            false
                            ]
                        }
                        }
                    },
                    "ipv6": {
                        "type": "object",
                        "properties": {
                        "mode": {
                            "description":"Mode (0 - IP Static, 1 - DHCP, 2 - Link-local)",
                            "type": "integer",
                            "default": 0,
                            "examples": [
                            0
                            ],
                            "minimum": 0,
                            "maximum": 2
                        },
                        "cidr6s": {
                            "type": "array",
                            "items": {
                            "type": "string",
                            "default": "2002:db80::5/64",
                            "examples": [
                                "2002:db80::5/64"
                            ]
                            }
                        },
                        "gw6": {
                            "type": "string",
                            "default": "2001:db90::1",
                            "examples": [
                            "2001:db90::1"
                            ],
                            "format": "ipv6"
                        },
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "examples": [
                            true,
                            false
                            ]
                        }
                        }
                    },
                    "default": {
                        "type": "boolean",
                        "default": false,
                        "examples": [
                        true,
                        false
                        ]
                    },
                    "id": {
                        "type": "string",
                        "default": "br0",
                        "examples": [
                        "br0"
                        ]
                    }
                    "required":{
                        "interfaces",
                        "id"
                    }
                    }
                }
            }

### Create lans [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[lans])

    + Headers

            Authorization: Token e6223a...fb7ad3
    + schema
            {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                    "interfaces": {
                        "type": "array",
                        "items": {
                        "type": "string",
                        "default": "eth0",
                        "examples": [
                            "eth0",
                            "eth1"
                        ]
                        }
                    },
                    "spanning_tree": {
                        "type": "boolean",
                        "default": false,
                        "examples": [
                        true,
                        false
                        ]
                    },
                    "eapol_passthrough": {
                        "type": "boolean",
                        "default": false,
                        "examples": [
                        true,
                        false
                        ]
                    },
                    "service_id": {
                        "type": "integer",
                        "default": 10,
                        "examples": [
                        10
                        ]
                    },
                    "ipv4": {
                        "type": "object",
                        "properties": {
                        "nat": {
                            "type": "boolean",
                            "default": true,
                            "examples": [
                            true,
                            false
                            ]
                        },
                        "mode": {
                            "description":"Mode (0 - IP Static, 1 - DHCP)",
                            "type": "integer",
                            "default": 0,
                            "examples": [
                            0
                            ],
                            "minimum": 0,
                            "maximum": 1
                        },
                        "cidr4s": {
                            "type": "array",
                            "items": {
                            "type": "string",
                            "default": "10.0.0.1/24",
                            "examples": [
                                "10.0.0.1/24"
                            ]
                            }
                        },
                        "gw4": {
                            "type": "string",
                            "default": "10.0.0.254",
                            "examples": [
                            "10.0.0.254"
                            ],
                            "format": "ipv4"
                        },
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "examples": [
                            true,
                            false
                            ]
                        }
                        }
                    },
                    "ipv6": {
                        "type": "object",
                        "properties": {
                        "mode": {
                            "description":"Mode (0 - IP Static, 1 - DHCP, 2 - Link-local)",
                            "type": "integer",
                            "default": 0,
                            "examples": [
                            0
                            ],
                            "minimum": 0,
                            "maximum": 2
                        },
                        "cidr6s": {
                            "type": "array",
                            "items": {
                            "type": "string",
                            "default": "2002:db80::5/64",
                            "examples": [
                                "2002:db80::5/64"
                            ]
                            }
                        },
                        "gw6": {
                            "type": "string",
                            "default": "2001:db90::1",
                            "examples": [
                            "2001:db90::1"
                            ],
                            "format": "ipv6"
                        },
                        "enabled": {
                            "type": "boolean",
                            "default": true,
                            "examples": [
                            true,
                            false
                            ]
                        }
                        }
                    },
                    "required": {
                    "interfaces"
                    }
                    }
                }
            }

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: br0 (string)
    + schema
            {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                    "id": {
                    "type": "string",
                    "default": "br0",
                    "examples": [
                        "br0"
                    ]
                    }
                },
                "required": {
                    "id"
                }
            }

### Delete all lans [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## active [/network/lans/active]
+ Attributes (LAN Base)

### Retrieve [GET]
+ Request
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (lans)
            + `id`: br0 (string)

    + Schema
    {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "array",
        "minItems": 1,
        "items": [
            {
                "type": "object",
                "properties": {
                    "interfaces": {
                        "description": "Interfaces LAN active",
                        "type": "array",
                        "minItems": 1,
                        "items": [
                            {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 254
                            }
                        ]
                    },
                    "spanning_tree": {
                        "type": "boolean"
                    },
                    "eapol_passthrough": {
                        "type": "boolean"
                    },
                    "service_id": {
                        "description": "Bitmap of Services Ids.",
                        "type": "integer"
                    },
                    "ipv4": {
                        "description": "IPv4 active configuration",
                        "type": "object",
                        "properties": {
                            "nat": {
                                "type": "boolean"
                            },
                            "mode": {
                                "description": "Enum for mode configurate [0: Static / 1: DHCP]",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 1
                            },
                            "cidr4s": {
                                "description": "IPv4 with CIDR active",
                                "type": "array",
                                "minItems": 0,
                                "maxItems": 8,
                                "items": [
                                    {
                                    "type": "string",
                                    "minLength": 9,
                                    "maxLength": 18
                                    }
                                ]
                            },
                            "gw4": {
                                "type": "string",
                                "format":"ipv4"
                            },
                            "enabled": {
                                "description": "Status configuration IPv4 is active",
                                "type": "boolean"
                            }
                        },
                    "required": [
                        "nat",
                        "mode",
                        "cidr4s",
                        "gw4",
                        "enabled"
                        ]
                    },
                    "ipv6": {
                        "description": "IPv6 active configuration",
                        "type": "object",
                        "properties": {
                            "mode": {
                                "description": "Enum for mode configurate [0: Static / 1: Automatic / 2: Link-Local]",
                                "type": "integer",
                                "minimum": 0,
                                "maximum": 2
                            },
                            "cidr6s": {
                                "type": "array",
                                "minItems": 0,
                                "maxItems": 8,
                                "items": [
                                    {
                                    "type": "string",
                                    "minLength": 9,
                                    "maxLength": 34
                                    }
                                ]
                            },
                            "gw6": {
                                "type": "string",
                                "format":"ipv6"
                            },
                            "enabled": {
                                "description": "Status configuration IPv6 is active",
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "mode",
                            "cidr6s",
                            "gw6",
                            "enabled"
                            ]
                        },
                        "id": {
                            "description": "Reference for this object",
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 32
                        }
                    },
                    "required": [
                        "interfaces",
                        "id"
                    ]
                }
            ]
    }

## lan [/network/lans/{id}]
+ Parameters
    + `id` (string) - The ID of the desired lan.

### Retrieve lan settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (lans)
        + `default`: false (boolean) - When true, indicates that this object cannot be deleted.
    + schema
            {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                    "interfaces": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "eth0",
                        "examples": [
                        "eth0"
                        ]
                    }
                    },
                    "spanning_tree": {
                    "type": "boolean",
                    "default": false,
                    "examples": [
                        true,
                        false
                    ]
                    },
                    "eapol_passthrough": {
                    "type": "boolean",
                    "default": false,
                    "examples": [
                        true,
                        false
                    ]
                    },
                    "service_id": {
                    "type": "integer",
                    "default": 10,
                    "examples": [
                        10
                    ]
                    },
                    "ipv4": {
                    "type": "object",
                    "properties": {
                        "nat": {
                        "type": "boolean",
                        "default": true,
                        "examples": [
                            true,
                            false
                        ]
                        },
                        "mode": {
                        "description":"Mode (0 - IP Static, 1 - DHCP)",
                        "type": "integer",
                        "default": 0,
                        "examples": [
                            0
                        ],
                        "minimum": 0,
                        "maximum": 1
                        },
                        "cidr4s": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "10.0.0.1/24",
                            "examples": [
                            "10.0.0.1/24"
                            ]
                        }
                        },
                        "gw4": {
                        "type": "string",
                        "default": "10.0.0.254",
                        "examples": [
                            "10.0.0.254"
                        ],
                        "format": "ipv4"
                        },
                        "enabled": {
                        "type": "boolean",
                        "default": true,
                        "examples": [
                            true,
                            false
                        ]
                        }
                    }
                    },
                    "ipv6": {
                    "type": "object",
                    "properties": {
                        "mode": {
                        "description":"Mode (0 - IP Static, 1 - DHCP, 2 - Link-local)",
                        "type": "integer",
                        "default": 0,
                        "examples": [
                            0
                        ],
                        "minimum": 0,
                        "maximum": 2
                        },
                        "cidr6s": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "2002:db80::5/64",
                            "examples": [
                            "2002:db80::5/64"
                            ]
                        }
                        },
                        "gw6": {
                        "type": "string",
                        "default": "2001:db90::1",
                        "examples": [
                            "2001:db90::1"
                        ],
                        "format": "ipv6"
                        },
                        "enabled": {
                        "type": "boolean",
                        "default": true,
                        "examples": [
                            true,
                            false
                        ]
                        }
                    }
                    },
                    "default": {
                    "description": "When true, indicates that this object cannot be deleted."
                    "type": "boolean",
                    "default": false,
                    "examples": [
                        true,
                        false
                    ]
                    }
                    "required":{
                        "interfaces",
                        "id"
                    }
                }
            }

### Update lan settings [PUT]
+ Attributes (lans)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3
    + schema
            {
                "$schema": "http://json-schema.org/draft-07/schema#",
                "type": "object",
                "properties": {
                    "interfaces": {
                    "type": "array",
                    "items": {
                        "type": "string",
                        "default": "eth0",
                        "examples": [
                        "eth0"
                        ]
                    }
                    },
                    "spanning_tree": {
                    "type": "boolean",
                    "default": false,
                    "examples": [
                        true,
                        false
                    ]
                    },
                    "eapol_passthrough": {
                    "type": "boolean",
                    "default": false,
                    "examples": [
                        true,
                        false
                    ]
                    },
                    "service_id": {
                    "type": "integer",
                    "default": 10,
                    "examples": [
                        10
                    ]
                    },
                    "ipv4": {
                    "type": "object",
                    "properties": {
                        "nat": {
                        "type": "boolean",
                        "default": true,
                        "examples": [
                            true,
                            false
                        ]
                        },
                        "mode": {
                        "description":"Mode (0 - IP Static, 1 - DHCP)",
                        "type": "integer",
                        "default": 0,
                        "examples": [
                            0
                        ],
                        "minimum": 0,
                        "maximum": 1
                        },
                        "cidr4s": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "10.0.0.1/24",
                            "examples": [
                            "10.0.0.1/24"
                            ]
                        }
                        },
                        "gw4": {
                        "type": "string",
                        "default": "10.0.0.254",
                        "examples": [
                            "10.0.0.254"
                        ],
                        "format": "ipv4"
                        },
                        "enabled": {
                        "type": "boolean",
                        "default": true,
                        "examples": [
                            true,
                            false
                        ]
                        }
                    }
                    },
                    "ipv6": {
                    "type": "object",
                    "properties": {
                        "mode": {
                        "description":"Mode (0 - IP Static, 1 - DHCP, 2 - Link-local)",
                        "type": "integer",
                        "default": 0,
                        "examples": [
                            0
                        ],
                        "minimum": 0,
                        "maximum": 2
                        },
                        "cidr6s": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "default": "2002:db80::5/64",
                            "examples": [
                            "2002:db80::5/64"
                            ]
                        }
                        },
                        "gw6": {
                        "type": "string",
                        "default": "2001:db90::1",
                        "examples": [
                            "2001:db90::1"
                        ],
                        "format": "ipv6"
                        },
                        "enabled": {
                        "type": "boolean",
                        "default": true,
                        "examples": [
                            true,
                            false
                        ]
                        }
                    }
                    },
                    "default": {
                    "description": "When true, indicates that this object cannot be deleted."
                    "type": "boolean",
                    "default": false,
                    "examples": [
                        true,
                        false
                    ]
                    }
                }
            }
+ Response 204

### Delete lan [DELETE]
+ Request ()
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

# Group Network WANs
<a name="network_wans"></a>
**WAN** interface is the one that connects your device to the Internet.

## wans app_traits [/network/wans/app_traits]

### GET
+ Request
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (object)
        + `max_entries`: 1 (number) - Maximum number of wans entries.

## wans [/network/wans]
+ Attributes (object)
    + `interface`: wlan0 (string, required)
    + `default_wan`: false (boolean) - When true, indicates this wan will be used by a service whose wan is not specified.
    + `igmp_proxy`: false (boolean)
    + `ping_allowed`: false (boolean)
    + `service_id`: 10 (number) - [Bitmap](#bitmap) of [Services Ids](#service_ids).
    + `ipv4` (object)
        + `mode`: 0 (enum[number])
            + Members
                + `0` - Static
                + `1` - DHCP
                + `2` - PPPoE
        + `cidr4s`: 10.0.0.1/24 (array[string]) - When in DHCP mode, it becomes the fallback option (if supported).
        + `gw4`: 10.0.0.254     (string) - When in DHCP mode, it becomes the fallback option (if supported).
        + `enabled`: true (boolean) - Enable ipv4 for this WAN.
    + `ipv6` (object)
        + `mode`: 0 (enum[number])
            + Members
                + `0` - Static
                + `1` - Automatic
                + `2` - Link-Local
        + `cidr6s`: 2002:db80::5/64 (array[string])
        + `gw6`: 2001:db90::1       (string)
        + `enabled`: true (boolean) - Enable ipv6 for this WAN.
    + `pppoe` (object)
        + `service`:             (string)
        + `login`: pppoe_user    (string)
        + `password`: pppoe_pass (string)
        + `mtu`: 1492            (number)

### Retrieve all wans [GET]
<a name="service_ids"></a>
**Supported services** [bitmap](#bitmap):
- None:     bit0 (weight = 1)
- Internet: bit1 (weight = 2)
- TR069:    bit2 (weight = 4)
- Other:    bit3 (weight = 8)
- Voice:    bit4 (weight = 16)
- IPTV:     bit5 (weight = 32)
- Voip:     bit6 (weight = 64)

+ Request
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (array)
        + (wans)
            + `id`: wan0 (string)

### Create wans [POST]
When you pass an array with multiple objects, the response would be no content
(code 204). For just one object, the response will return the id created (code 201).

+ Request (application/json)
    + Attributes (array[wans])

    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204
+ Response 201 (application/json)
    + Attributes (object)
        + `id`: wan0 (string)

### Delete all wans [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## wans counters [/network/wans/counters]

### Retrieve wans counters [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (Counters Base)

## wans stats [/network/wans/stats]

### Retrieve wans statistics [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (Stats Base)

## wan [/network/wans/{id}]
+ Parameters
    + `id` (string) - The ID of the desired wan.

### Retrieve wan settings [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (wans)
        + `default`: false (boolean) - When true, indicates that this object cannot be deleted.

### Update wan settings [PUT]
+ Attributes (wans)

+ Request (application/json)
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 204

### Delete wan [DELETE]
+ Request ()
    + Headers
            Authorization: Token e6223a...fb7ad3

+ Response 204

## wan counters [/network/wans/{id}/counters]
+ Parameters
    + `id` (string) - The ID of the desired wan.

### Retrieve wan counters [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (Counters Base)

## wan stats [/network/wans/{id}/stats]
+ Parameters
    + `id` (string) - The ID of the desired wan.

### Retrieve wan statistics [GET]
+ Request
    + Headers

            Authorization: Token e6223a...fb7ad3

+ Response 200 (application/json)
    + Attributes (Stats Base)

# Data structures

## Counters Base (object)
+ `tx_packets`: 10  (number)
+ `tx_bytes`:   500 (number)
+ `tx_dropped`: 1   (number)
+ `tx_errors`:  1   (number)
+ `rx_packets`: 30  (number)
+ `rx_bytes`:   100 (number)
+ `rx_dropped`: 0   (number)
+ `rx_errors`:  0   (number)

## PON Counters Base (object)
+ `tx_bytes`:   500,            (number)
+ `rx_bytes`:   600,            (number)
+ `tx_packets`: 500,            (number)
+ `rx_packets`: 600,            (number)
+ `tx_unicast_packets`:   60,   (number)
+ `rx_unicast_packets`:   60,   (number)
+ `tx_multicast_packets`: 60,   (number)
+ `tx_multicast_packets`: 60,   (number)
+ `tx_broadcast_packets`: 6,    (number)
+ `rx_broadcast_packets`: 6,    (number)
+ `tx_pause_packets`: 0,        (number)
+ `rx_pause_packets`: 0,        (number)
+ `fec_errors`: 0,              (number)
+ `hec_errors`: 0,              (number)
+ `tx_dropped`: 0,         (number)

## PON Slot Base (object)
+ `id`: slot0   (string)
+ `node`: 1     (number)
+ `gem_id`: 257 (number)
+ `t_cont`: 1   (number)

## PON Status Base (object)
+ `bias_current`: `8.56`    (number) - Optical laser Tx current `(mA)`.
+ `part_number`: UX3320     (string) - Transceiver part number.
+ `rx_power`: `-16.27`      (number) - Optical power Rx (dBm).
+ `temperature`: `8.56`     (number) - Transceiver temperature `(°C)`.
+ `vendor_name`: Intelbras  (string)
+ `tx_power`: `2.43`        (number) - Optical laser Tx power
+ `voltage`: `3.36`         (number) - Transceiver voltage
+ `current_mode`: epon      (string) - epon/gpon/xgpon/xgspon

## Stats Base (object)
+ `throughput` (object) - Bits per second.
    + `tx`: 3000 (number)
    + `rx`: 1000 (number)
+ `pps` (object) - Packets per second.
    + `tx`: 100 (number)
    + `rx`: 50  (number)

## PON Base (object)
+ `mode`: auto                          (string) - auto/epon/gpon/xgpon/xgspon
+ `omci`                                (object)
    + `model_id`: 121W                  (string)
    + `vendor_id`: ITBS                 (string)
    + `serial_number`: 6ECB4080         (string)
    + `hardware_version`: PON121W_v1.0  (string)
    + `olt_profile`: 1                  (enum[number]) - Enum of [OLT Vendor Profile](#olt_vendor_profile).
+ `oam`                                 (object)
    + `model_id`: 121W                  (string)
    + `vendor_id`: ITBS                 (string)
    + `serial_number`: 001A6ECB4080     (string)

## PON Security (object)
+ `loid`: user                      (string)
+ `loid_password`: pass             (string)
+ `ploam_password`: 123456789       (string)

## Radio Base (object)
+ `enabled`: true (boolean) - Enable the Radio.
+ `mode`: 1     (enum[number]) - [Wireless mode](#wifi_modes).
    + Members
        + `1` - AP mode
        + `2` - Client mode
        + `4` - Repeater mode
        + `8` - Management mode
+ `tx_power`: 5 (number) - Tx power `(Dbm)`.
+ `atf_mode`: 0 (enum[number]) - [Air Time Fairness](#air_time_fairness) mode.
    + Members
        + `0` - Disabled
        + `1` - Limited: SSIDs will be limited to it's **atf_percent** `(air time percentage)`
        + `2` - Shared: SSIDs will be allowed to use more than **atf_percent** `(air time percentage)`, if available
+ `country`: BR (string) - Radio's operation country.
+ `band`: 2.4 (number) - Current frequency band of radio.
+ `management`: false (boolean) - When true, this radio is used for management purpose only.
+ `mu_mimo`: true (boolean) - Enables MU-MIMO technology.
+ `beamforming` : true (boolean) - Enables Beamforming technology.
+ `phy_mode` : 11 (number) - [Bitmap](#bitmap) of current [PHY mode](#wifi_phy_modes).

## Radio Channels Base
+ `list`: 1,2     (array[number]) - Channel list. Empty list means automatic mode with all available channels.
+ `extension`: 0 (enum[number])
    + Members
        + `0` - Automatic
        + `1` - Below
        + `2` - Above
+ `bandwidth` (object)
    + `value`: 40    (number)
    + `fixed`: false (boolean) - Force selected bandwidth (no fallback).

## WiFi Nodes Base (object)
+ `mac`: 00:1A:3F:00:6E:CF        (string, required) - MAC address.
+ `signal`: `-55`                 (number, required) - Signal strenght `(dBm)`.
+ `uptime`: 0                     (number) - Uptime in seconds.
+ `idle`: 0                       (number) - Idle time in seconds.
+ `tx_rate`: 120000               (number) - Tx rate in Kbits per second.
+ `rx_rate`: 120000               (number) - Rx rate in Kbits per second.
+ `phy_mode`: 0                   (number) - [PHY mode](#wifi_phy_modes).
+ `hostname`: android_0123cafe    (string)
+ `description`: John Wick Mobile (string)
+ `rx_packets`: 1698              (number)
+ `rx_bytes`: 91784               (number)
+ `tx_packets`: 890               (number)
+ `tx_bytes`: 384360              (number)
+ `ip_addresses`: 192.168.0.2     (array[string])
+ `ip_mode`: 1                    (enum[number]) - Client IP address mode `(best guess)`.
    + Members
        + `0` - Unknown
        + `1` - DHCP
        + `2` - Static

## WiFi ACL Base (object)
+ `mode`: 0 (enum[number], required)
    + Members
        + `0` - Disabled
        + `1` - Allow listed entries
        + `2` - Deny listed entries

## WiFi ACL Entry (object)
+ `mac`: 00:1A:3F:00:6E:CF        (string, required)
+ `description`: John Wick Mobile (string)

## PON Nodes Base (object)
+ `id`: `node0` (string, required) - Node ID.

## PON Node Base (object)
+ `id`: `node0` (string, required) - Node ID.
+ `model`: `olt8820i` (string, required) - OLT Model ID.
+ `gpon_provisioning_state`: 1 (enum[number]) - Enum of [Provisioning States](#provisioning_states).

## VLAN Base (object)
+ `interfaces`: eth0 (array, required)
+ `8021p_tag`: false (boolean)

## VLAN Base ID (object)
+ `interfaces`: eth0 (array, required)
+ `8021p_tag`: false (boolean)
+ `id`: 100 (number, required) - VLAN ID (1 - 4094).

## LAN Base (object)
+ `interfaces`: eth0,eth1 (array, required) - Interface list that belongs to this LAN.
+ `spanning_tree`: false  (boolean)
+ `eapol_passthrough`: false (boolean)
+ `service_id`: 10 (number) - [Bitmap](#bitmap) of [Services Ids](#service_ids).
+ `ipv4` (object)
    + `nat`: true (boolean) - Enable Network Address Translation for this LAN.
    + `mode`: 0 (enum[number])
        + Members
            + `0` - Static
            + `1` - DHCP
    + `cidr4s`: 10.0.0.1/24 (array[string]) - When in DHCP mode, it becomes the fallback option (if supported).
    + `gw4`: 10.0.0.254     (string) - When in DHCP mode, it becomes the fallback option (if supported).
    + `enabled`: true (boolean) - Enable ipv4 for this LAN.
+ `ipv6` (object)
    + `mode`: 0 (enum[number])
        + Members
            + `0` - Static
            + `1` - Automatic
            + `2` - Link-Local
    + `cidr6s`: 2002:db80::5/64 (array[string])
    + `gw6`: 2001:db90::1       (string)
    + `enabled`: true (boolean) - Enable ipv6 for this LAN.

## SSID Security Base (object)
+ `auth_type`: 0 (enum[number]) - Authentication type.
    + Members
        + `0` - Open
        + `1` - Shared
        + `2` - WPA
        + `3` - WPA PSK
        + `4` - WPA2
        + `5` - WPA2 PSK
        + `6` - WPA EAP TTLS
        + `7` - WPA PEAP
        + `8` - WPA2 EAP TTLS
        + `9` - WPA2 PEAP
+ `encryption`: 0 (enum[number])
    + Members
        + `0` - None
        + `1` - WEP 64
        + `2` - WEP 128
        + `3` - TKIP
        + `4` - AES
        + `5` - TKIP + AES
+ `psk`: 12345678 (string) - Pre Shared Key `(WPA-PSK / WPA2-PSK)`.
+ `wep` (object)
    + `key_format`: 0 (enum[number]) - WEP Key format.
        + Members
            + `0` - ASCII
            + `1` - HEXA
    + `default_key`: 0 (number) - Default WEP key index.
    + `keys`: 12345 (array[string]) - List of WEP keys.
